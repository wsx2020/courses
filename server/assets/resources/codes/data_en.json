{"sections":[{"id":"introduction","title":"Introduction","status":"","background":"","goals":14,"duration":30,"steps":["intro","flashlight","telegraph","morse","morse-1","morse-encoding","radio","morse-applications","information","smoke-signals","flags","genetic","intro-end"]},{"id":"binary","title":"Binary Numbers","status":"dev","background":"","goals":55,"duration":55,"steps":["transistor","finger5","step-15","step-16","step-17","bracket","finger32","step-20","step-21","step-22","step-23","step-24","dec2bin","step-26"]},{"id":"error-detection","title":"Error Detection","status":"dev","background":"","goals":0,"duration":5,"steps":["step-27","barcode-intro","barcode-drawing","step-30","step-31"]},{"id":"cryptography","title":"Secret Codes","status":"dev","background":"","goals":0,"duration":5,"steps":["step-32","caesar_cipher","step-34","step-35","step-36","step-37","step-38"]},{"id":"enigma","title":"The Enigma","status":"dev","background":"","goals":0,"duration":5,"steps":["step-39"]},{"id":"rsa","title":"Public Key Cryptography","status":"dev","background":"","goals":0,"duration":5,"steps":["step-40"]}],"steps":[{"section":"introduction","id":"intro","goals":["play"],"html":"<x-step id=\"intro\" goals=\"play\"><div class=\"row padded\"><div class=\"grow\"> <p class=\"voice\"><span class=\"sentence\" data-timings=\"0-8928\">In the early 2000s, the Colombian government was fighting a civil war against groups of insurgents, who were hiding in camps in the South American rainforest. </span><span class=\"sentence\" data-timings=\"8928-15480\">Occasionally, soldiers were captured by these rebels, and then had to spend months or even years in captivity.</span></p><p class=\"voice\"><span class=\"sentence\" data-timings=\"15480-23832\">It is easy to lose hope when you’ve been chained up in a hostage camp for such a long time, unable to see your family, and guarded by armed guerilla forces. </span><span class=\"sentence\" data-timings=\"23832-27576\">However, in 2010, there was reason to be hopeful: </span><span class=\"sentence\" data-timings=\"27576-31008\">the army was approaching, and planning to rescue them shortly.</span></p></div><div style=\"width: 260px\"> <x-img src=\"/resources/codes/images/rainforest.jpg\" width=\"260\" height=\"320\"></x-img></div></div> <p class=\"voice\"><span class=\"sentence\" data-timings=\"31008-41304\">Unfortunately, it seemed impossible to tell the prisoners that help was coming, without also alerting their capturers – that is, until Colonel Jose Espejo came up with an ingenious idea. </span><span class=\"sentence\" data-timings=\"41304-48720\">With his team, he wrote a new pop song, embedded a secret message in the chorus, and then played it thousands of times over the radio.</span></p><p class=\"voice\"><span class=\"sentence\" data-timings=\"48720-54984\">To the rebels, it sounded just like meaningless music, but to the prisoners listening in, it was a message of hope. </span><span class=\"sentence\" data-timings=\"54984-59040\">See if you can spot the message – it starts around 1:30.</span></p><figure><iframe width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/184253099&amp;color=%23295869&amp;auto_play=false&amp;hide_related=true&amp;show_comments=false&amp;show_user=false&amp;show_reposts=false&amp;show_teaser=false&amp;sharing=false&amp;download=false&amp;show_playcount=false\"></iframe></figure></x-step>"},{"id":"flashlight","goals":["flashlight"],"section":"introduction","html":"<x-step id=\"flashlight\" goals=\"flashlight\"><p class=\"voice\"><span class=\"sentence\" data-timings=\"59040-65904\">There are many other examples in our world, where we want to communicate with others, but we can’t use our voices or text. </span><span class=\"sentence\" data-timings=\"65904-68760\">Maybe your friend lives across the street from you. </span><span class=\"sentence\" data-timings=\"68760-74880\">At night, you secretly talk to each other using flashlights – without waking up your family by shouting.</span></p><div class=\"row padded\"><div style=\"width: 300px\"> <x-img class=\"window\" src=\"/resources/codes/images/window.png\" width=\"300\" height=\"280\"><img class=\"flash\" src=\"/resources/codes/images/light.png\" width=\"74\" height=\"74\" alt=\"\"></x-img><x-gesture target=\".window\" offset=\"-80,-44\"></x-gesture></div><div class=\"grow\"> <p class=\"voice\"><span class=\"sentence\" data-timings=\"74880-79176\">For example, one short flash might mean “hello” or “yes”. </span><span class=\"sentence\" data-timings=\"79176-84288\">One long flash might mean “how are you?”, and two short flashes might mean “good night”. </span><span class=\"sentence\" data-timings=\"84288-87192\">Can you come up with any other signals you might need?</span></p><p class=\"reveal voice\" data-when=\"flashlight\"><span class=\"sentence\" data-timings=\"87192-96552\"> However, even if you agree many different signals for different words or questions, it will be difficult to have more complex conversations, or to talk about new topics…</span></p></div></div> </x-step>"},{"id":"telegraph","goals":["press"],"section":"introduction","html":"<x-step id=\"telegraph\" goals=\"press\"><h2>Morse Code</h2><p class=\"voice\"><span class=\"sentence\" data-timings=\"96552-103536\">In the early 19th century, the only way to transmit messages across long distances was my mail or by messenger. </span><span class=\"sentence\" data-timings=\"103536-112992\">Companies like the “Pony Express” ran delivery routes with couriers riding on horses, but it could still take days or even weeks to send a message between distant cities.</span></p><p class=\"voice\"><span class=\"sentence\" data-timings=\"112992-117600\">This all changed in 1837, with the invention of the <span class=\"nowrap\"><x-gloss xid=\"telegraph\"><strong>telegraph</strong></x-gloss>.</span> </span><span class=\"sentence\" data-timings=\"117600-123720\">Using electric cables spanned across the country, it was possible to send messages almost instantly.</span></p><figure> <img src=\"/resources/codes/images/pony-express.jpg\" width=\"525\" height=\"260\" alt=\"\"><p class=\"caption\"> The pony express next to a telegraph line under construction – a painting by <em>George Ottinger</em></p></figure> <p class=\"voice\"><span class=\"sentence\" data-timings=\"123720-132312\">The first commercial telegraph was developed by William Forthergill Cooke and Charles Wheatstone, and used compass needles to point at different letters on a display.</span></p><div class=\"row padded\"><div class=\"grow\"> <p class=\"voice\"><span class=\"sentence\" data-timings=\"132312-139920\">One year later, the inventor <span class=\"nowrap\"><x-bio xid=\"morse\">Samuel Morse</x-bio>,</span> together with his assistant Alfred Vail, developed an even better version of the telegraph.</span></p><p class=\"voice\"><span class=\"sentence\" data-timings=\"139920-144768\">Pressing a button at one end of the telegraph line closes an electronic circuit. </span><span class=\"sentence\" data-timings=\"144768-150432\">This means that current is flowing, which triggers a buzzing sound at the other end of the telegraph line.</span></p></div><div style=\"width: 320px\"> <div class=\"telegraph\"><img src=\"/resources/codes/images/telegraph-bg.jpg\" width=\"320\" height=\"210\" alt=\"\"><img class=\"handle\" src=\"/resources/codes/images/telegraph-handle.png\" width=\"320\" height=\"210\" alt=\"\"><img class=\"fg\" src=\"/resources/codes/images/telegraph-fg.png\" width=\"320\" height=\"210\" alt=\"\"><svg width=\"320\" height=\"210\"><path d=\"M-3.2,112.8c5.7-2.3,43.1-13.4,47.1-16.9l9.8-6.6c4.4-3.3,20.2-6.8,25.5-8.6,7.6-2,1.5-14.5,9.6-15,3.3.3,88.9,1.5,88.5,3a5.2,5.2,0,0,1,3.9,4.9V93.3a4.1,4.1,0,0,1-4,4.1l-92,.9a4.1,4.1,0,0,1-4.1-4c.1-3,.2-8.1-4.2-7.8l-24.2,1C40.1,89.4,30.2,106.2,22,114.6c-6.1,6.3-16.5,6.5-24.7,7.6\"></path></svg></div><x-gesture target=\".telegraph\" offset=\"108,-35\"></x-gesture></div></div> </x-step>"},{"id":"morse","section":"introduction","goals":["blank-0","blank-1"],"html":"<x-step id=\"morse\" goals=\"blank-0 blank-1\"><p class=\"voice\"><span class=\"sentence\" data-timings=\"150432-160464\">To send more complex messages, Morse represented every letter in the alphabet using a unique sequence of short beeps (called dits or dots) and long beeps (called dahs or dashes):</span></p><div class=\"alphabet\"><div><strong>A</strong><x-morse char=\"A\"></x-morse></div><div><strong>B</strong><x-morse char=\"B\"></x-morse></div><div><strong>C</strong><x-morse char=\"C\"></x-morse></div><div><strong>D</strong><x-morse char=\"D\"></x-morse></div><div><strong>E</strong><x-morse char=\"E\"></x-morse></div><div><strong>F</strong><x-morse char=\"F\"></x-morse></div><div><strong>G</strong><x-morse char=\"G\"></x-morse></div><div><strong>H</strong><x-morse char=\"H\"></x-morse></div><div><strong>I</strong><x-morse char=\"I\"></x-morse></div><div><strong>J</strong><x-morse char=\"J\"></x-morse></div><div><strong>K</strong><x-morse char=\"K\"></x-morse></div><div><strong>L</strong><x-morse char=\"L\"></x-morse></div><div><strong>M</strong><x-morse char=\"M\"></x-morse></div><div><strong>N</strong><x-morse char=\"N\"></x-morse></div><div><strong>O</strong><x-morse char=\"O\"></x-morse></div><div><strong>P</strong><x-morse char=\"P\"></x-morse></div><div><strong>Q</strong><x-morse char=\"Q\"></x-morse></div><div><strong>R</strong><x-morse char=\"R\"></x-morse></div><div><strong>S</strong><x-morse char=\"S\"></x-morse></div><div><strong>T</strong><x-morse char=\"T\"></x-morse></div><div><strong>U</strong><x-morse char=\"U\"></x-morse></div><div><strong>V</strong><x-morse char=\"V\"></x-morse></div><div><strong>W</strong><x-morse char=\"W\"></x-morse></div><div><strong>X</strong><x-morse char=\"X\"></x-morse></div><div><strong>Y</strong><x-morse char=\"Y\"></x-morse></div><div><strong>Z</strong><x-morse char=\"Z\"></x-morse></div></div><p class=\"voice\"><span class=\"sentence\" data-timings=\"160464-165048\">For example, to transmit the letter E, we just have to send one <span class=\"nowrap\"><x-blank><button class=\"choice\">short beep</button><button class=\"choice\">long beep</button></x-blank>.</span> </span><span class=\"sentence\" data-timings=\"165048-167904\">To send the letter U, we have to send <span class=\"nowrap\"><x-blank><button class=\"choice\">dot-dot-dash</button><button class=\"choice\">dot-dash-dot</button><button class=\"choice\">dash-dash-dot</button></x-blank>.</span> </span><span class=\"sentence\" data-timings=\"167904-172344\">Morse had invented a new “language”, which we now call the <span class=\"nowrap\"><x-gloss xid=\"morse-code\">Morse code</x-gloss>.</span></span></p></x-step>"},{"id":"morse-1","section":"introduction","goals":["next-0"],"html":"<x-step id=\"morse-1\" goals=\"next-0\"><div class=\"row padded\"><div style=\"width: 280px\"> <x-img src=\"/resources/codes/images/morse.jpg\" width=\"280\" height=\"300\"></x-img><p class=\"caption\"> This telegraph machine also records messages on a long strip of paper.</p></div><div class=\"grow\"> <p class=\"voice\"><span class=\"sentence\" data-timings=\"172344-180432\">Now we can send any message by first converting its letters into Morse code, and then tapping out the corresponding dots and dashes on the telegraph.</span></p><p class=\"voice\"><span class=\"sentence\" data-timings=\"180432-184536\">One of Morse’s goals was to keep the messages as short as possible. </span><span class=\"sentence\" data-timings=\"184536-191712\">This is why common letters like E and T have a very short code, while uncommon letters like J or Q have much longer codes.</span></p><p class=\"r voice\"><span class=\"sentence\" data-timings=\"191712-195000\"> Morse code quickly became popular all around the world. </span><span class=\"sentence\" data-timings=\"195000-202008\">Trained operators can send around 25 words per minute, which corresponds to six dots or dashes <em>every second</em>! </span><span class=\"sentence\"><button class=\"next-step\">Continue</button></span></p></div></div> </x-step>"},{"id":"morse-encoding","goals":["type"],"section":"introduction","html":"<x-step id=\"morse-encoding\" goals=\"type\"><p class=\"voice\"><span class=\"sentence\" data-timings=\"202008-208200\">The most famous Morse code signal is “SOS”, which indicates that you have an emergency and need help. </span><span class=\"sentence\" data-timings=\"208200-213504\">It consists of three dots, followed by three dashes, followed by three more dots. </span><span class=\"sentence\" data-timings=\"213504-219240\">Try writing other words or sentences in this box, and watch how they are encoded as Morse code:</span></p><x-code-box><div class=\"input\" contenteditable=\"true\" spellcheck=\"false\">SOS</div><div class=\"output morse\"></div></x-code-box></x-step>"},{"id":"radio","goals":["play"],"section":"introduction","html":"<x-step id=\"radio\" goals=\"play\"><p class=\"voice\"><span class=\"sentence\" data-timings=\"219240-224424\">Morse code was also what the Colombian army used to send a message to the hostages. </span><span class=\"sentence\" data-timings=\"224424-230544\">Translated from Spanish, the message was <em>19 PEOPLE RESCUED. YOU’RE NEXT. DON’T GIVE UP.</em> </span><span class=\"sentence\" data-timings=\"230544-235704\">Listen to the song once more, and see if you can hear the dots and dashes in the background:</span></p><figure><x-img src=\"/resources/codes/images/radio.png\" width=\"225\" height=\"220\" style=\"margin-top: -24px\"><button class=\"radio-play\"></button></x-img></figure><x-gesture target=\".radio-play\"></x-gesture></x-step>"},{"id":"morse-applications","goals":["play"],"section":"introduction","html":"<x-step id=\"morse-applications\" goals=\"play\"><p class=\"voice\"><span class=\"sentence\" data-timings=\"235704-245976\">If you don’t know Morse code, this may just sound like part of the music – but the hostages were soldiers who had been trained in Morse code, and recognized it in the song when they heard it on the radio. </span><span class=\"sentence\" data-timings=\"245976-250056\">A few days later, they were rescued and safely returned home.</span></p><p class=\"voice\"><span class=\"sentence\" data-timings=\"250056-258192\">It turns out that there were many other examples throughout history, where Morse code has been used to communicate secret (or not so secret) messages:</span></p><div class=\"row padded padded-thin\"><div style=\"width: 220px\"> <x-img src=\"/resources/codes/images/capitol-records.jpg\" width=\"220\" height=\"280\"><div class=\"capitol-light\"></div></x-img><p class=\"caption\"> The red warning light at the top of the <em>Capitol Records</em> building in Los Angeles blinks out the word <em>HOLLYWOOD</em> in Morse code.</p></div><div style=\"width: 220px\"> <x-video src=\"/resources/codes/images/denton.mp4\" poster=\"/resources/codes/images/denton.jpg\" width=\"220\" height=\"280\" audio=\"audio\"></x-video><p class=\"caption\"> When captured during the Vietnam war, Navy pilot Jeremiah Denton blinks the word <em>TORTURE</em> in Morse, while being forced to record a propaganda video.</p></div><div style=\"width: 220px\"> <x-img src=\"/resources/codes/images/stitching.jpg\" width=\"220\" height=\"280\" lightbox=\"lightbox\" credit=\"David Fearn / newsteam\"></x-img><p class=\"caption\"> During World War II, a British prisoner was forced to create decorative stitchings like this one. Can you find (and decipher) the hidden Morse code messages?</p></div></div> </x-step>"},{"id":"information","section":"introduction","goals":["blank-0"],"html":"<x-step id=\"information\" goals=\"blank-0\"><h2>Codes and Information</h2><p class=\"voice\"><span class=\"sentence\" data-timings=\"258192-266952\">Wherever we look, we are surrounded by <span class=\"nowrap\"><x-gloss xid=\"information\"><strong>information</strong></x-gloss>,</span> like books and newspapers, numbers and charts, photos, images, music, or movie clips.</span></p><p class=\"voice\"><span class=\"sentence\" data-timings=\"266952-272472\">A <x-gloss xid=\"code\"><strong>code</strong></x-gloss> is a rule or algorithm that can be used to express information in a certain format. </span><span class=\"sentence\" data-timings=\"272472-279168\">One example is our <em>alphabet</em>, which can be used to express language as a series of written symbols (called <em>letters</em>). </span><span class=\"sentence\" data-timings=\"279168-284928\">Another example we saw before is the <span class=\"nowrap\"><x-gloss xid=\"morse-code\">Morse code</x-gloss>,</span> which expresses words as sequences of <span class=\"nowrap\"><x-blank><button class=\"choice\">dots and dashes</button><button class=\"choice\">letters and spaces</button><button class=\"choice\">radio music</button></x-blank>.</span></span></p></x-step>"},{"id":"smoke-signals","section":"introduction","goals":["next-0"],"html":"<x-step id=\"smoke-signals\" goals=\"next-0\"><p class=\"voice\"><span class=\"sentence\" data-timings=\"284928-293040\">But this is only the beginning, and there is a huge variety of codes that can be used for different purposes, or to encode different kinds of information. </span><span class=\"sentence\" data-timings=\"293040-298200\">In this course, we will explore some of the most important and most interesting ones.</span></p><div class=\"row padded\"><div class=\"grow\"> <p class=\"voice\"><span class=\"sentence\" data-timings=\"298200-304032\">Codes are not a recent invention – they were used by ancient cultures, many thousands of years ago.</span></p><p class=\"voice\"><span class=\"sentence\" data-timings=\"304032-310224\">For example, guards along the Great Wall of China used smoke to warn each other about potential attacks. </span><span class=\"sentence\" data-timings=\"310224-315744\">Different tribes of indigenous peoples in North American each had their own signalling systems: </span><span class=\"sentence\" data-timings=\"315744-322104\">they created columns of smoke by burning damp grass, which allowed them to communicate over long distances.</span></p><p class=\"r voice\"><span class=\"sentence\" data-timings=\"322104-327072\"> Smoke signals are even used today, for example as a distress signal at sea. </span><span class=\"sentence\" data-timings=\"327072-333936\">And when a new Pope is elected by the College of Cardinals, the outcome of each vote is indicated by black or white smoke. </span><span class=\"sentence\"><button class=\"next-step\">Continue</button></span></p></div><div style=\"width: 280px\"> <x-img src=\"/resources/codes/images/smoke-signals.jpg\" width=\"280\" height=\"350\" lightbox=\"lightbox\"></x-img><p class=\"caption\"> Native American Smoke Signals – a painting by <em>John Mix Stanley</em></p></div></div> </x-step>"},{"id":"flags","section":"introduction","goals":["blank-0","blank-1","blank-2"],"html":"<x-step id=\"flags\" goals=\"blank-0 blank-1 blank-2\"><p class=\"voice\"><span class=\"sentence\" data-timings=\"333936-339432\">There are many other examples where words or letters are not the best way to express information. </span><span class=\"sentence\" data-timings=\"339432-342096\">Here are some other codes you might have heard of:</span></p><x-tabbox class=\"sticky\"><div class=\"tab\"> <h3>Phonetic Alphabet <span class=\"check\" data-when=\"blank-0\"></span></h3><p class=\"voice\"><span class=\"sentence\" data-timings=\"342096-348480\">Many letters sound very similar – especially when spoken over the phone or radio, with loud background noise. </span><span class=\"sentence\" data-timings=\"348480-355416\">That’s why the military, police, pilots, and many others use the <strong>NATO Phonetic Alphabet</strong> when they have to spell names. </span><span class=\"sentence\" data-timings=\"355416-359040\">Here, every individual letter is replaced with a unique word:</span></p><div class=\"alphabet\"><div><strong>A</strong><span>Alpha</span></div><div><strong>B</strong><span>Bravo</span></div><div><strong>C</strong><span>Charlie</span></div><div><strong>D</strong><span>Delta</span></div><div><strong>E</strong><span>Echo</span></div><div><strong>F</strong><span>Foxtrot</span></div><div><strong>G</strong><span>Golf</span></div><div><strong>H</strong><span>Hotel</span></div><div><strong>I</strong><span>India</span></div><div><strong>J</strong><span>Juliet</span></div><div><strong>K</strong><span>Kilo</span></div><div><strong>L</strong><span>Lima</span></div><div><strong>M</strong><span>Mike</span></div><div><strong>N</strong><span>November</span></div><div><strong>O</strong><span>Oscar</span></div><div><strong>P</strong><span>Papa</span></div><div><strong>Q</strong><span>Quebec</span></div><div><strong>R</strong><span>Romeo</span></div><div><strong>S</strong><span>Sierra</span></div><div><strong>T</strong><span>Tango</span></div><div><strong>U</strong><span>Uniform</span></div><div><strong>V</strong><span>Victor</span></div><div><strong>W</strong><span>Whiskey</span></div><div><strong>X</strong><span>X-ray</span></div><div><strong>Y</strong><span>Yankee</span></div><div><strong>Z</strong><span>Zulu</span></div></div><p class=\"voice\"><span class=\"sentence\" data-timings=\"359040-364512\">For example, saying “Mike–Alpha–Tango–Hotel–Sierra” would spell the word <span class=\"nowrap\"><x-blank-input solution=\"Maths\"></x-blank-input>.</span></span></p></div><div class=\"tab\"> <h3>Maritime Flags <span class=\"check\" data-when=\"blank-1\"></span></h3><p class=\"voice\"><span class=\"sentence\" data-timings=\"364512-371448\">Ships can use <strong>Maritime Signal Flags</strong>, which are hung from their masts, to communicate with other ships within sight range.</span></p><div class=\"row padded padded-thin\"><div style=\"width: 320px\"> <x-img src=\"/resources/codes/images/maritime-flags-1.jpg\" width=\"320\" height=\"220\" lightbox=\"lightbox\"></x-img><p class=\"caption\"> Storage for signal flags onboard a US Navy ship</p></div><div style=\"width: 320px\"> <x-img src=\"/resources/codes/images/maritime-flags-2.jpg\" width=\"320\" height=\"220\" lightbox=\"lightbox\"></x-img><p class=\"caption\"> Decorative flags on a sailing boat</p></div></div> <p class=\"voice\"><span class=\"sentence\" data-timings=\"371448-376080\">All flags have different colours or patterns, and represent a different letter:</span></p><div class=\"flags\"><div><img src=\"/resources/codes/images/maritime/a.svg\" alt=\"A\" width=\"50\" height=\"50\"><strong>A</strong></div><div><img src=\"/resources/codes/images/maritime/b.svg\" alt=\"B\" width=\"50\" height=\"50\"><strong>B</strong></div><div><img src=\"/resources/codes/images/maritime/c.svg\" alt=\"C\" width=\"50\" height=\"50\"><strong>C</strong></div><div><img src=\"/resources/codes/images/maritime/d.svg\" alt=\"D\" width=\"50\" height=\"50\"><strong>D</strong></div><div><img src=\"/resources/codes/images/maritime/e.svg\" alt=\"E\" width=\"50\" height=\"50\"><strong>E</strong></div><div><img src=\"/resources/codes/images/maritime/f.svg\" alt=\"F\" width=\"50\" height=\"50\"><strong>F</strong></div><div><img src=\"/resources/codes/images/maritime/g.svg\" alt=\"G\" width=\"50\" height=\"50\"><strong>G</strong></div><div><img src=\"/resources/codes/images/maritime/h.svg\" alt=\"H\" width=\"50\" height=\"50\"><strong>H</strong></div><div><img src=\"/resources/codes/images/maritime/i.svg\" alt=\"I\" width=\"50\" height=\"50\"><strong>I</strong></div><div><img src=\"/resources/codes/images/maritime/j.svg\" alt=\"J\" width=\"50\" height=\"50\"><strong>J</strong></div><div><img src=\"/resources/codes/images/maritime/k.svg\" alt=\"K\" width=\"50\" height=\"50\"><strong>K</strong></div><div><img src=\"/resources/codes/images/maritime/l.svg\" alt=\"L\" width=\"50\" height=\"50\"><strong>L</strong></div><div><img src=\"/resources/codes/images/maritime/m.svg\" alt=\"M\" width=\"50\" height=\"50\"><strong>M</strong></div><div><img src=\"/resources/codes/images/maritime/n.svg\" alt=\"N\" width=\"50\" height=\"50\"><strong>N</strong></div><div><img src=\"/resources/codes/images/maritime/o.svg\" alt=\"O\" width=\"50\" height=\"50\"><strong>O</strong></div><div><img src=\"/resources/codes/images/maritime/p.svg\" alt=\"P\" width=\"50\" height=\"50\"><strong>P</strong></div><div><img src=\"/resources/codes/images/maritime/q.svg\" alt=\"Q\" width=\"50\" height=\"50\"><strong>Q</strong></div><div><img src=\"/resources/codes/images/maritime/r.svg\" alt=\"R\" width=\"50\" height=\"50\"><strong>R</strong></div><div><img src=\"/resources/codes/images/maritime/s.svg\" alt=\"S\" width=\"50\" height=\"50\"><strong>S</strong></div><div><img src=\"/resources/codes/images/maritime/t.svg\" alt=\"T\" width=\"50\" height=\"50\"><strong>T</strong></div><div><img src=\"/resources/codes/images/maritime/u.svg\" alt=\"U\" width=\"50\" height=\"50\"><strong>U</strong></div><div><img src=\"/resources/codes/images/maritime/v.svg\" alt=\"V\" width=\"50\" height=\"50\"><strong>V</strong></div><div><img src=\"/resources/codes/images/maritime/w.svg\" alt=\"W\" width=\"50\" height=\"50\"><strong>W</strong></div><div><img src=\"/resources/codes/images/maritime/x.svg\" alt=\"X\" width=\"50\" height=\"50\"><strong>X</strong></div><div><img src=\"/resources/codes/images/maritime/y.svg\" alt=\"Y\" width=\"50\" height=\"50\"><strong>Y</strong></div><div><img src=\"/resources/codes/images/maritime/z.svg\" alt=\"Z\" width=\"50\" height=\"50\"><strong>Z</strong></div></div><p class=\"voice\"><span class=\"sentence\" data-timings=\"376080-380520\">For example, if you see the flags <img src=\"/resources/codes/images/maritime/i.svg\" width=\"20\" height=\"20\" alt=\"\"> <img src=\"/resources/codes/images/maritime/c.svg\" width=\"20\" height=\"20\" alt=\"\"> <img src=\"/resources/codes/images/maritime/e.svg\" width=\"20\" height=\"20\" alt=\"\"> on a passing ship, you should <span class=\"nowrap\"><x-blank><button class=\"choice\">watch out for icebergs</button><button class=\"choice\">give them assistance</button><button class=\"choice\">reduce speed</button></x-blank>.</span></span></p></div><div class=\"tab\"> <h3>Flag Semaphore <span class=\"check\" data-when=\"blank-2\"></span></h3><p class=\"voice\"><span class=\"sentence\" data-timings=\"380520-387168\"><strong>Flag Semaphore</strong> is another way to communicate using flags, which was used long before the invention of the telegraph. </span><span class=\"sentence\" data-timings=\"387168-393168\">In this case, all flags are the same, but holding them in different positions indicates different letters:</span></p><div class=\"flags\"><div><img src=\"/resources/codes/images/semaphore/a.svg\" alt=\"A\" width=\"90\" height=\"80\"><strong>A</strong></div><div><img src=\"/resources/codes/images/semaphore/b.svg\" alt=\"B\" width=\"90\" height=\"80\"><strong>B</strong></div><div><img src=\"/resources/codes/images/semaphore/c.svg\" alt=\"C\" width=\"90\" height=\"80\"><strong>C</strong></div><div><img src=\"/resources/codes/images/semaphore/d.svg\" alt=\"D\" width=\"90\" height=\"80\"><strong>D</strong></div><div><img src=\"/resources/codes/images/semaphore/e.svg\" alt=\"E\" width=\"90\" height=\"80\"><strong>E</strong></div><div><img src=\"/resources/codes/images/semaphore/f.svg\" alt=\"F\" width=\"90\" height=\"80\"><strong>F</strong></div><div><img src=\"/resources/codes/images/semaphore/g.svg\" alt=\"G\" width=\"90\" height=\"80\"><strong>G</strong></div><div><img src=\"/resources/codes/images/semaphore/h.svg\" alt=\"H\" width=\"90\" height=\"80\"><strong>H</strong></div><div><img src=\"/resources/codes/images/semaphore/i.svg\" alt=\"I\" width=\"90\" height=\"80\"><strong>I</strong></div><div><img src=\"/resources/codes/images/semaphore/j.svg\" alt=\"J\" width=\"90\" height=\"80\"><strong>J</strong></div><div><img src=\"/resources/codes/images/semaphore/k.svg\" alt=\"K\" width=\"90\" height=\"80\"><strong>K</strong></div><div><img src=\"/resources/codes/images/semaphore/l.svg\" alt=\"L\" width=\"90\" height=\"80\"><strong>L</strong></div><div><img src=\"/resources/codes/images/semaphore/m.svg\" alt=\"M\" width=\"90\" height=\"80\"><strong>M</strong></div><div><img src=\"/resources/codes/images/semaphore/n.svg\" alt=\"N\" width=\"90\" height=\"80\"><strong>N</strong></div><div><img src=\"/resources/codes/images/semaphore/o.svg\" alt=\"O\" width=\"90\" height=\"80\"><strong>O</strong></div><div><img src=\"/resources/codes/images/semaphore/p.svg\" alt=\"P\" width=\"90\" height=\"80\"><strong>P</strong></div><div><img src=\"/resources/codes/images/semaphore/q.svg\" alt=\"Q\" width=\"90\" height=\"80\"><strong>Q</strong></div><div><img src=\"/resources/codes/images/semaphore/r.svg\" alt=\"R\" width=\"90\" height=\"80\"><strong>R</strong></div><div><img src=\"/resources/codes/images/semaphore/s.svg\" alt=\"S\" width=\"90\" height=\"80\"><strong>S</strong></div><div><img src=\"/resources/codes/images/semaphore/t.svg\" alt=\"T\" width=\"90\" height=\"80\"><strong>T</strong></div><div><img src=\"/resources/codes/images/semaphore/u.svg\" alt=\"U\" width=\"90\" height=\"80\"><strong>U</strong></div><div><img src=\"/resources/codes/images/semaphore/v.svg\" alt=\"V\" width=\"90\" height=\"80\"><strong>V</strong></div><div><img src=\"/resources/codes/images/semaphore/w.svg\" alt=\"W\" width=\"90\" height=\"80\"><strong>W</strong></div><div><img src=\"/resources/codes/images/semaphore/x.svg\" alt=\"X\" width=\"90\" height=\"80\"><strong>X</strong></div><div><img src=\"/resources/codes/images/semaphore/y.svg\" alt=\"Y\" width=\"90\" height=\"80\"><strong>Y</strong></div><div><img src=\"/resources/codes/images/semaphore/z.svg\" alt=\"Z\" width=\"90\" height=\"80\"><strong>Z</strong></div></div><div class=\"row padded\"><div class=\"grow\"> <p class=\"voice\"><span class=\"sentence\" data-timings=\"393168-399048\">The Beatles wanted to use Semaphore to spell the word “HELP” on the cover of their album with the same name.</span></p><p class=\"voice\"><span class=\"sentence\" data-timings=\"399048-405120\">However, they didn’t like the way these specific letters looked – so they just chose four random letters instead! </span><span class=\"sentence\" data-timings=\"405120-408624\">As you can see, they ended up spelling the word <span class=\"nowrap\"><x-blank-input solution=\"rujv\"></x-blank-input>!</span></span></p></div><div style=\"width: 200px\"> <x-img class=\"beatles\" src=\"/resources/codes/images/help-album.jpg\" width=\"200\" height=\"200\" credit=\"© Parlophone\"></x-img></div></div> </div></x-tabbox> </x-step>"},{"id":"genetic","section":"introduction","goals":[],"html":"<x-step id=\"genetic\" goals=\"\"><h2>The Genetic Code</h2><p class=\"voice\"><span class=\"sentence\" data-timings=\"408624-411384\">Codes even appear inside our own body! </span><span class=\"sentence\" data-timings=\"411384-419304\">The <x-gloss xid=\"dna\">DNA</x-gloss> is a long <x-gloss xid=\"molecule\">molecule</x-gloss> that appears in every cell of your body, and contains the genetic instructions for how all living organisms work. </span><span class=\"sentence\" data-timings=\"419304-423240\">It consists of four different components, called <em>nucleotides</em>:</span></p><div class=\"row padded-thin\"><div style=\"width: 150px\"><img src=\"/resources/codes/images/dna/adenine.svg\" width=\"150\" height=\"120\" alt=\"\"><p class=\"caption\">Adenine</p></div><div style=\"width: 150px\"><img src=\"/resources/codes/images/dna/thymine.svg\" width=\"150\" height=\"120\" alt=\"\"><p class=\"caption\">Thymine</p></div><div style=\"width: 150px\"><img src=\"/resources/codes/images/dna/cytosine.svg\" width=\"150\" height=\"120\" alt=\"\"><p class=\"caption\">Cytosine</p></div><div style=\"width: 150px\"><img src=\"/resources/codes/images/dna/guanine.svg\" width=\"150\" height=\"120\" alt=\"\"><p class=\"caption\">Guanine</p></div></div><div class=\"row padded\"><div style=\"width: 260px\"> <x-img src=\"/resources/codes/images/dna.jpg\" width=\"260\" height=\"380\"></x-img></div><div class=\"grow\"> <p class=\"voice\"><span class=\"sentence\" data-timings=\"423240-431088\">A strand of DNA consists of billions of these <em>nucleotides</em>, which contain the instructions for the development and functioning of our body. </span><span class=\"sentence\" data-timings=\"431088-435936\">We can represent them using sequences of the letters <strong class=\"m-red\"> A</strong>, <strong class=\"m-blue\"> T</strong>, <strong class=\"m-green\"> C</strong> and <strong class=\"m-yellow\"> G</strong>.</span></p><p class=\"voice\"><span class=\"sentence\" data-timings=\"435936-444888\">Similar to Morse code, every three consecutive nucleotides correspond to a specific <span class=\"nowrap\"><x-gloss xid=\"amino-acid\"><em>amino acid</em></x-gloss>,</span> a small component used by the cells in our body. </span><span class=\"sentence\" data-timings=\"444888-452232\">For example, <strong class=\"m-red\">AA</strong><strong class=\"m-yellow\">G</strong> represents <em>Lysine</em>, an amino acid we consume by eating food like eggs, meat or soybeans.</span></p><p><span class=\"sentence\">The genetic code has space for <span class=\"math\" data-voice=\"4 to the power of 3 equals 64\"><msup><mn>4</mn><mn>3</mn></msup><mo value=\"=\">=</mo><mn>64</mn></span> amino acids (four options for each of the three nucleotides in a triple), but only 20 are actually needed in our body.</span></p></div></div> </x-step>"},{"id":"intro-end","section":"introduction","goals":[],"html":"<x-step id=\"intro-end\" goals=\"\"><p class=\"voice\"><span class=\"sentence\" data-timings=\"462336-467856\">Finally, remember that the same symbol can mean completely different things within different codes. </span><span class=\"sentence\" data-timings=\"467856-478680\">For example, the letter <em>C</em> can be represented by “Charlie” in the NATO Phonetic Alphabet, it could be the maritime flag <img src=\"/resources/codes/images/maritime/c.svg\" width=\"20\" height=\"20\" alt=\"\">, or it can represent <em>Cytosine</em> if placed within a strand of DNA letters.</span></p></x-step>"},{"section":"binary","id":"transistor","goals":["switch"],"sectionStatus":"dev","html":"<x-step id=\"transistor\" goals=\"switch\"><p><span class=\"sentence\">Computers are all around us. </span><span class=\"sentence\">You’re reading this on a computer right now! </span><span class=\"sentence\">But how many people actually know how computers work? </span><span class=\"sentence\">How many people, when they scroll through their social media feed, or search for a recipe, or stream a movie, actually know how the magic little box actually works?</span></p><p><span class=\"sentence\">There are many many complex layers and processes that operate together get information from all over the world and display it on your screen. </span><span class=\"sentence\">But at the lowest level of every computer are <span class=\"nowrap\"><x-gloss xid=\"transistor\">transistors</x-gloss>.</span> </span><span class=\"sentence\">Transistors are the building blocks of how computers store and manipulate information.</span></p><div class=\"row padded\"><div style=\"width: 320px\"> <div class=\"transist\"><figure> <svg width=\"360px\" height=\"228px\" viewBox=\"0 0 360 228\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <title>transistor_on</title> <defs> <rect id=\"path-1\" x=\"0\" y=\"0\" width=\"248\" height=\"90\" rx=\"3\"></rect> </defs> <g id=\"transistor_on\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"> <g id=\"transistor/wires\"> <path d=\"M8.52651283e-14,66 C50.6666667,71.3333333 76,95.3333333 76,138 C76,138 76,153 100,153 C100,153 259,153 259,153 C284,153 284,138 284,138 C284,95.3333333 309.333333,71.3333333 360,66\" id=\"path_on\" stroke=\"#979797\" stroke-width=\"1\"></path> <line x1=\"95\" y1=\"114\" x2=\"264\" y2=\"114\" id=\"path_off\" stroke=\"#979797\" stroke-width=\"1\"></line> <g id=\"transistor\" transform=\"translate(56.000000, 74.000000)\" fill-rule=\"evenodd\" stroke-width=\"1\"> <g id=\"top\" transform=\"translate(35.000000, 0.000000)\" stroke=\"#000000\"> <path d=\"M3,0 L175,0 C176.656854,-3.04359188e-16 178,1.34314575 178,3 L178,64 L178,64 L0,64 L0,3 C-2.02906125e-16,1.34314575 1.34314575,3.04359188e-16 3,0 Z\" stroke-width=\"4\" fill=\"#CAC9CA\"></path> <path d=\"M3,0 L175,0 C176.656854,-3.04359188e-16 178,1.34314575 178,3 L178,16 L178,16 L0,16 L0,3 C-2.02906125e-16,1.34314575 1.34314575,3.04359188e-16 3,0 Z\" id=\"layer1\" stroke-width=\"4\" fill=\"#6B8CA0\"></path> <rect id=\"layer3\" stroke-width=\"4\" fill=\"#99755A\" x=\"0\" y=\"32\" width=\"178\" height=\"16\"></rect> </g> <g id=\"bottom\" transform=\"translate(0.000000, 64.000000)\"> <mask id=\"mask-2\" fill=\"white\"> <use xlink:href=\"#path-1\"></use> </mask> <use id=\"Mask\" stroke=\"#000000\" stroke-width=\"4\" fill=\"#D8D8D8\" xlink:href=\"#path-1\"></use> <rect id=\"Rectangle\" stroke=\"#000000\" stroke-width=\"4\" fill=\"#547E98\" mask=\"url(#mask-2)\" x=\"0\" y=\"0\" width=\"248\" height=\"15\"></rect> <path d=\"M245,0 C246.656854,-3.04359188e-16 248,1.34314575 248,3 L248.000884,46.956312 C247.337549,46.9853363 246.670487,47 246,47 C221.147186,47 201,26.8528137 201,2 C201,1.32961474 201.014659,0.662653333 201.043675,-0.000581151679 L245,0 Z\" id=\"Combined-Shape\" stroke=\"#000000\" stroke-width=\"4\" fill=\"#547E98\"></path> <path d=\"M44.956312,-0.000883578361 C44.9853363,0.662450582 45,1.32951284 45,2 C45,26.8528137 24.8528137,47 0,47 L0,47 L0,3 C-2.02906125e-16,1.34314575 1.34314575,3.04118709e-16 3,-2.16840434e-19 Z\" id=\"Combined-Shape\" stroke=\"#000000\" stroke-width=\"4\" fill=\"#557F98\"></path> </g> </g> <line x1=\"180\" y1=\"74\" x2=\"180\" y2=\"0\" id=\"Path\" stroke=\"#000000\" stroke-width=\"4\"></line> <path d=\"M76,138 C76,95.3333333 50.6666667,71.3333333 0,66\" id=\"wire_in\" stroke=\"#000000\" stroke-width=\"4\"></path> <path d=\"M284,138 C284,95.3333333 309.333333,71.3333333 360,66\" id=\"wire_out\" stroke=\"#000000\" stroke-width=\"4\"></path> </g> <g id=\"electron\" transform=\"translate(8.000000, 58.000000)\"> <circle id=\"Oval\" stroke=\"#000000\" stroke-width=\"3\" fill=\"#FFFFFF\" cx=\"12\" cy=\"12\" r=\"12\"></circle> <rect id=\"Rectangle\" fill=\"#000000\" transform=\"translate(12.500000, 12.000000) rotate(-4.000000) translate(-12.500000, -12.000000) \" x=\"6\" y=\"10\" width=\"13\" height=\"4\"></rect> </g> <g id=\"electron\" transform=\"translate(54.000000, 90.000000)\"> <circle id=\"Oval\" stroke=\"#000000\" stroke-width=\"3\" fill=\"#FFFFFF\" cx=\"12\" cy=\"12\" r=\"12\"></circle> <rect id=\"Rectangle\" fill=\"#000000\" transform=\"translate(12.500000, 12.000000) rotate(-4.000000) translate(-12.500000, -12.000000) \" x=\"6\" y=\"10\" width=\"13\" height=\"4\"></rect> </g> <g id=\"electron\" transform=\"translate(71.000000, 139.000000)\"> <circle id=\"Oval\" stroke=\"#000000\" stroke-width=\"3\" fill=\"#FFFFFF\" cx=\"12\" cy=\"12\" r=\"12\"></circle> <rect id=\"Rectangle\" fill=\"#000000\" transform=\"translate(12.500000, 12.000000) rotate(-4.000000) translate(-12.500000, -12.000000) \" x=\"6\" y=\"10\" width=\"13\" height=\"4\"></rect> </g> <g id=\"electron\" transform=\"translate(117.000000, 142.000000)\"> <circle id=\"Oval\" stroke=\"#000000\" stroke-width=\"3\" fill=\"#FFFFFF\" cx=\"12\" cy=\"12\" r=\"12\"></circle> <rect id=\"Rectangle\" fill=\"#000000\" transform=\"translate(12.500000, 12.000000) rotate(-4.000000) translate(-12.500000, -12.000000) \" x=\"6\" y=\"10\" width=\"13\" height=\"4\"></rect> </g> <g id=\"electron\" transform=\"translate(168.000000, 142.000000)\"> <circle id=\"Oval\" stroke=\"#000000\" stroke-width=\"3\" fill=\"#FFFFFF\" cx=\"12\" cy=\"12\" r=\"12\"></circle> <rect id=\"Rectangle\" fill=\"#000000\" transform=\"translate(12.500000, 12.000000) rotate(-4.000000) translate(-12.500000, -12.000000) \" x=\"6\" y=\"10\" width=\"13\" height=\"4\"></rect> </g> <g id=\"electron\" transform=\"translate(219.000000, 142.000000)\"> <circle id=\"Oval\" stroke=\"#000000\" stroke-width=\"3\" fill=\"#FFFFFF\" cx=\"12\" cy=\"12\" r=\"12\"></circle> <rect id=\"Rectangle\" fill=\"#000000\" transform=\"translate(12.500000, 12.000000) rotate(-4.000000) translate(-12.500000, -12.000000) \" x=\"6\" y=\"10\" width=\"13\" height=\"4\"></rect> </g> <g id=\"electron\" transform=\"translate(264.000000, 139.000000)\"> <circle id=\"Oval\" stroke=\"#000000\" stroke-width=\"3\" fill=\"#FFFFFF\" cx=\"12\" cy=\"12\" r=\"12\"></circle> <rect id=\"Rectangle\" fill=\"#000000\" transform=\"translate(12.500000, 12.000000) rotate(-4.000000) translate(-12.500000, -12.000000) \" x=\"6\" y=\"10\" width=\"13\" height=\"4\"></rect> </g> <g id=\"electron\" transform=\"translate(282.000000, 91.000000)\"> <circle id=\"Oval\" stroke=\"#000000\" stroke-width=\"3\" fill=\"#FFFFFF\" cx=\"12\" cy=\"12\" r=\"12\"></circle> <rect id=\"Rectangle\" fill=\"#000000\" transform=\"translate(12.500000, 12.000000) rotate(-4.000000) translate(-12.500000, -12.000000) \" x=\"6\" y=\"10\" width=\"13\" height=\"4\"></rect> </g> <g id=\"electron\" transform=\"translate(319.000000, 60.000000)\"> <circle id=\"Oval\" stroke=\"#000000\" stroke-width=\"3\" fill=\"#FFFFFF\" cx=\"12\" cy=\"12\" r=\"12\"></circle> <rect id=\"Rectangle\" fill=\"#000000\" transform=\"translate(12.500000, 12.000000) rotate(-4.000000) translate(-12.500000, -12.000000) \" x=\"6\" y=\"10\" width=\"13\" height=\"4\"></rect> </g> </g> </svg></figure></div></div><div class=\"grow\"> <p><span class=\"sentence\">Transistors are like tiny tiny tiny, microscopic electrical switches that transmit ELECTRONS. </span><span class=\"sentence\">Turn it on, the electrons flow. </span><span class=\"sentence\">Turn it off, the electrons stop (Does this sound familiar to another device? </span><span class=\"sentence\">Perhaps the telegraph?).</span></p><p><span class=\"sentence\">But how can a simple on/off switch store information as complex as videos? </span><span class=\"sentence\">We learned in the last chapter about Morse Code. </span><span class=\"sentence\">But Transistors are interpreted by a computer through very different means.</span></p></div></div> </x-step>"},{"id":"finger5","sectionStatus":"dev","section":"binary","goals":["blank-0"],"html":"<x-step id=\"finger5\" goals=\"blank-0\"><p><span class=\"sentence\">To understand how all sorts of different codes can be stored in the transistors of a computer, let’s try a thought exercise…</span></p><h2>Fingers</h2><p><span class=\"sentence\">How high can you count using only one hand, without skipping any numbers? </span><span class=\"sentence\">When we count with our hands, we traditionally use how many fingers are up to represent the number. </span><span class=\"sentence\">We have five fingers, so that means the highest we can count with one hand is <span class=\"nowrap\"><x-blank><button class=\"choice\">five</button><button class=\"choice\">four</button><button class=\"choice\">ten</button></x-blank>.</span></span></p><p class=\"TODO\"></p><button class=\"appear\">APPEAR</button><table class=\"finger-grid\"><tbody><tr><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/decimal_1.jpg\" width=\"100\" height=\"100\"></x-img><div class=\"caption\">1</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/decimal_2.jpg\" width=\"100\" height=\"100\"></x-img><div class=\"caption\">2</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/decimal_3.jpg\" width=\"100\" height=\"100\"></x-img><div class=\"caption\">3</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/decimal_4.jpg\" width=\"100\" height=\"100\"></x-img><div class=\"caption\">4</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/decimal_5.jpg\" width=\"100\" height=\"100\"></x-img><div class=\"caption\">5</div></div></td></tr></tbody></table></x-step>"},{"id":"step-15","section":"binary","goals":["blank-0"],"html":"<x-step id=\"step-15\" goals=\"blank-0\"><div class=\"row padded\"><div class=\"grow\"> <p><span class=\"sentence\">A drawback of this strategy is that there are many unused finger combinations. </span><span class=\"sentence\">For example, this finger combination to the right would represent <span class=\"nowrap\"><x-blank-input solution=\"2\"></x-blank-input>.</span> </span><span class=\"sentence\">With our traditional model there are two fingers up, so it means two. </span><span class=\"sentence\">But we already have a configuration for two! </span><span class=\"sentence\">We're wasting valuable space.</span></p></div><div style=\"width: 320px\"> <x-img src=\"/resources/codes/images/fingers/binary_17.jpg\" width=\"320\" height=\"320\"></x-img></div></div> </x-step>"},{"id":"step-16","section":"binary","goals":[],"html":"<x-step id=\"step-16\" goals=\"\"><p><span class=\"sentence\">There is a way that we can count much higher while still using only one hand, and this counting method will also help us understand how transistors store information. </span><span class=\"sentence\">The secret lies in something called <span class=\"nowrap\"><x-gloss xid=\"binary-numbers\">binary numbers</x-gloss>.</span> </span><span class=\"sentence\">Instead of using the number of fingers up as our count, we have to do something a bit more complicated.</span></p><div class=\"row padded\"><div class=\"grow\"> <p><span class=\"sentence\">We can treat each of our fingers as a <strong>digit</strong> with one of two possible values: </span><span class=\"sentence\">down or up. </span><span class=\"sentence\">Down can represent the number <strong>0</strong> and up can represent the number <strong>1</strong>.</span></p></div><div style=\"width: 200px\"> <table class=\"finger-highlights\"><tbody><tr><td><x-img src=\"/resources/codes/images/fingers/finger_0_highlight.png\" width=\"100\"></x-img><div class=\"caption\">0</div></td><td><x-img src=\"/resources/codes/images/fingers/finger_1_highlight.png\" width=\"100\"></x-img><div class=\"caption\">1</div></td></tr></tbody></table></div></div> <p><span class=\"sentence\">If we want to use each combination of ups and downs to represent a different number, then how many combinations can we represent? </span><span class=\"sentence\">(Link back to combinatorics).</span></p></x-step>"},{"id":"step-17","section":"binary","goals":["blank-0","blank-1","blank-2","blank-3","blank-4","blank-5","blank-6","blank-7","blank-8","blank-9","blank-10"],"html":"<x-step id=\"step-17\" goals=\"blank-0 blank-1 blank-2 blank-3 blank-4 blank-5 blank-6 blank-7 blank-8 blank-9 blank-10\"><p class=\"todo\"></p><table class=\"finger-combos\"><tbody><tr><td><div class=\"head\">Number of fingers</div></td><td><div class=\"head\">Possible combinations</div></td></tr><tr><td><div>1</div></td><td><div class=\"\"><x-blank-input solution=\"2\"></x-blank-input></div></td></tr><tr><td><div>2</div></td><td><div class=\"\"><x-blank-input solution=\"4\"></x-blank-input></div></td></tr><tr><td><div>3</div></td><td><div class=\"\"><x-blank-input solution=\"8\"></x-blank-input></div></td></tr><tr><td><div>4</div></td><td><div class=\"\"><x-blank-input solution=\"16\"></x-blank-input></div></td></tr><tr><td><div>5</div></td><td><div class=\"\"><x-blank-input solution=\"32\"></x-blank-input></div></td></tr></tbody></table><table> <tbody><tr> <td>.head Number of fingers</td><td>.head Possible combinations.</td></tr> <tr> <td>1</td><td><x-blank-input solution=\"2\"></x-blank-input></td></tr> <tr> <td>2</td><td><x-blank-input solution=\"4\"></x-blank-input></td></tr> <tr> <td>3</td><td><x-blank-input solution=\"8\"></x-blank-input></td></tr> <tr> <td>4</td><td><x-blank-input solution=\"16\"></x-blank-input></td></tr> <tr> <td>5</td><td><x-blank-input solution=\"32\"></x-blank-input></td></tr> </tbody></table> <p><span class=\"sentence\">More generally, with N fingers we can represent <x-blank-input solution=\"2^N\"></x-blank-input> possible combinations. </span><span class=\"sentence\">Remember that our fingers are merely serving as a metaphor for binary numbers. </span><span class=\"sentence\">This means that <strong>any N-digit number can represent up to 2^N different values</strong>.</span></p></x-step>"},{"id":"bracket","section":"binary","goals":["slider-0"],"html":"<x-step id=\"bracket\" goals=\"slider-0\"><h2>1s and 0s</h2><p><span class=\"sentence\">Recalling our lesson on <a href=\"link/to/course\" target=\"_blank\">probability trees</a>, with each finger that we add our number of options multiplies by two.</span></p><svg class=\"bracket\" width=\"600\" height=\"320\"><g id=\"b1\"><line x1=\"0\" y1=\"165\" x2=\"100\" y2=\"165\" target=\"yes\"></line></g><g id=\"b2\"><line x1=\"100\" y1=\"85\" x2=\"200\" y2=\"85\" target=\"no\"></line><line x1=\"100\" y1=\"165\" x2=\"100\" y2=\"85\" target=\"no\"></line><text x=\"150\" y=\"81\" font-size=\"40\" target=\"no\">0</text><line x1=\"100\" y1=\"245\" x2=\"200\" y2=\"245\" target=\"yes\"></line><line x1=\"100\" y1=\"165\" x2=\"100\" y2=\"245\" target=\"yes\"></line><text x=\"150\" y=\"241\" font-size=\"40\" target=\"yes\">1</text></g><g id=\"b4\"><line x1=\"200\" y1=\"45\" x2=\"300\" y2=\"45\" target=\"no\"></line><line x1=\"200\" y1=\"85\" x2=\"200\" y2=\"45\" target=\"no\"></line><text x=\"250\" y=\"41\" font-size=\"30\" target=\"no\">0</text><line x1=\"200\" y1=\"125\" x2=\"300\" y2=\"125\" target=\"no\"></line><line x1=\"200\" y1=\"85\" x2=\"200\" y2=\"125\" target=\"no\"></line><text x=\"250\" y=\"121\" font-size=\"30\" target=\"no\">1</text><line x1=\"200\" y1=\"205\" x2=\"300\" y2=\"205\" target=\"yes\"></line><line x1=\"200\" y1=\"245\" x2=\"200\" y2=\"205\" target=\"yes\"></line><text x=\"250\" y=\"201\" font-size=\"30\" target=\"yes\">0</text><line x1=\"200\" y1=\"285\" x2=\"300\" y2=\"285\" target=\"no\"></line><line x1=\"200\" y1=\"245\" x2=\"200\" y2=\"285\" target=\"no\"></line><text x=\"250\" y=\"281\" font-size=\"30\" target=\"no\">1</text></g><g id=\"b8\"><line x1=\"300\" y1=\"25\" x2=\"400\" y2=\"25\" target=\"no\"></line><line x1=\"300\" y1=\"45\" x2=\"300\" y2=\"25\" target=\"no\"></line><text x=\"350\" y=\"21\" font-size=\"20\" target=\"no\">0</text><line x1=\"300\" y1=\"65\" x2=\"400\" y2=\"65\" target=\"no\"></line><line x1=\"300\" y1=\"45\" x2=\"300\" y2=\"65\" target=\"no\"></line><text x=\"350\" y=\"61\" font-size=\"20\" target=\"no\">1</text><line x1=\"300\" y1=\"105\" x2=\"400\" y2=\"105\" target=\"no\"></line><line x1=\"300\" y1=\"125\" x2=\"300\" y2=\"105\" target=\"no\"></line><text x=\"350\" y=\"101\" font-size=\"20\" target=\"no\">0</text><line x1=\"300\" y1=\"145\" x2=\"400\" y2=\"145\" target=\"no\"></line><line x1=\"300\" y1=\"125\" x2=\"300\" y2=\"145\" target=\"no\"></line><text x=\"350\" y=\"141\" font-size=\"20\" target=\"no\">1</text><line x1=\"300\" y1=\"185\" x2=\"400\" y2=\"185\" target=\"no\"></line><line x1=\"300\" y1=\"205\" x2=\"300\" y2=\"185\" target=\"no\"></line><text x=\"350\" y=\"181\" font-size=\"20\" target=\"no\">0</text><line x1=\"300\" y1=\"225\" x2=\"400\" y2=\"225\" target=\"yes\"></line><line x1=\"300\" y1=\"205\" x2=\"300\" y2=\"225\" target=\"yes\"></line><text x=\"350\" y=\"221\" font-size=\"20\" target=\"yes\">1</text><line x1=\"300\" y1=\"265\" x2=\"400\" y2=\"265\" target=\"no\"></line><line x1=\"300\" y1=\"285\" x2=\"300\" y2=\"265\" target=\"no\"></line><text x=\"350\" y=\"261\" font-size=\"20\" target=\"no\">0</text><line x1=\"300\" y1=\"305\" x2=\"400\" y2=\"305\" target=\"no\"></line><line x1=\"300\" y1=\"285\" x2=\"300\" y2=\"305\" target=\"no\"></line><text x=\"350\" y=\"301\" font-size=\"20\" target=\"no\">1</text></g><g id=\"b16\"><line x1=\"400\" y1=\"15\" x2=\"500\" y2=\"15\" target=\"no\"></line><line x1=\"400\" y1=\"25\" x2=\"400\" y2=\"15\" target=\"no\"></line><text x=\"450\" y=\"11\" font-size=\"16\" target=\"no\">0</text><line x1=\"400\" y1=\"35\" x2=\"500\" y2=\"35\" target=\"no\"></line><line x1=\"400\" y1=\"25\" x2=\"400\" y2=\"35\" target=\"no\"></line><text x=\"450\" y=\"31\" font-size=\"16\" target=\"no\">1</text><line x1=\"400\" y1=\"55\" x2=\"500\" y2=\"55\" target=\"no\"></line><line x1=\"400\" y1=\"65\" x2=\"400\" y2=\"55\" target=\"no\"></line><text x=\"450\" y=\"51\" font-size=\"16\" target=\"no\">0</text><line x1=\"400\" y1=\"75\" x2=\"500\" y2=\"75\" target=\"no\"></line><line x1=\"400\" y1=\"65\" x2=\"400\" y2=\"75\" target=\"no\"></line><text x=\"450\" y=\"71\" font-size=\"16\" target=\"no\">1</text><line x1=\"400\" y1=\"95\" x2=\"500\" y2=\"95\" target=\"no\"></line><line x1=\"400\" y1=\"105\" x2=\"400\" y2=\"95\" target=\"no\"></line><text x=\"450\" y=\"91\" font-size=\"16\" target=\"no\">0</text><line x1=\"400\" y1=\"115\" x2=\"500\" y2=\"115\" target=\"no\"></line><line x1=\"400\" y1=\"105\" x2=\"400\" y2=\"115\" target=\"no\"></line><text x=\"450\" y=\"111\" font-size=\"16\" target=\"no\">1</text><line x1=\"400\" y1=\"135\" x2=\"500\" y2=\"135\" target=\"no\"></line><line x1=\"400\" y1=\"145\" x2=\"400\" y2=\"135\" target=\"no\"></line><text x=\"450\" y=\"131\" font-size=\"16\" target=\"no\">0</text><line x1=\"400\" y1=\"155\" x2=\"500\" y2=\"155\" target=\"no\"></line><line x1=\"400\" y1=\"145\" x2=\"400\" y2=\"155\" target=\"no\"></line><text x=\"450\" y=\"151\" font-size=\"16\" target=\"no\">1</text><line x1=\"400\" y1=\"175\" x2=\"500\" y2=\"175\" target=\"no\"></line><line x1=\"400\" y1=\"185\" x2=\"400\" y2=\"175\" target=\"no\"></line><text x=\"450\" y=\"171\" font-size=\"16\" target=\"no\">0</text><line x1=\"400\" y1=\"195\" x2=\"500\" y2=\"195\" target=\"no\"></line><line x1=\"400\" y1=\"185\" x2=\"400\" y2=\"195\" target=\"no\"></line><text x=\"450\" y=\"191\" font-size=\"16\" target=\"no\">1</text><line x1=\"400\" y1=\"215\" x2=\"500\" y2=\"215\" target=\"no\"></line><line x1=\"400\" y1=\"225\" x2=\"400\" y2=\"215\" target=\"no\"></line><text x=\"450\" y=\"211\" font-size=\"16\" target=\"no\">0</text><line x1=\"400\" y1=\"235\" x2=\"500\" y2=\"235\" target=\"yes\"></line><line x1=\"400\" y1=\"225\" x2=\"400\" y2=\"235\" target=\"yes\"></line><text x=\"450\" y=\"231\" font-size=\"16\" target=\"yes\">1</text><line x1=\"400\" y1=\"255\" x2=\"500\" y2=\"255\" target=\"no\"></line><line x1=\"400\" y1=\"265\" x2=\"400\" y2=\"255\" target=\"no\"></line><text x=\"450\" y=\"251\" font-size=\"16\" target=\"no\">0</text><line x1=\"400\" y1=\"275\" x2=\"500\" y2=\"275\" target=\"no\"></line><line x1=\"400\" y1=\"265\" x2=\"400\" y2=\"275\" target=\"no\"></line><text x=\"450\" y=\"271\" font-size=\"16\" target=\"no\">1</text><line x1=\"400\" y1=\"295\" x2=\"500\" y2=\"295\" target=\"no\"></line><line x1=\"400\" y1=\"305\" x2=\"400\" y2=\"295\" target=\"no\"></line><text x=\"450\" y=\"291\" font-size=\"16\" target=\"no\">0</text><line x1=\"400\" y1=\"315\" x2=\"500\" y2=\"315\" target=\"no\"></line><line x1=\"400\" y1=\"305\" x2=\"400\" y2=\"315\" target=\"no\"></line><text x=\"450\" y=\"311\" font-size=\"16\" target=\"no\">1</text></g><g id=\"b32\"><line x1=\"500\" y1=\"10\" x2=\"600\" y2=\"10\" target=\"no\"></line><line x1=\"500\" y1=\"15\" x2=\"500\" y2=\"10\" target=\"no\"></line><text x=\"550\" y=\"9\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"20\" x2=\"600\" y2=\"20\" target=\"no\"></line><line x1=\"500\" y1=\"15\" x2=\"500\" y2=\"20\" target=\"no\"></line><text x=\"550\" y=\"19\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"30\" x2=\"600\" y2=\"30\" target=\"no\"></line><line x1=\"500\" y1=\"35\" x2=\"500\" y2=\"30\" target=\"no\"></line><text x=\"550\" y=\"29\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"40\" x2=\"600\" y2=\"40\" target=\"no\"></line><line x1=\"500\" y1=\"35\" x2=\"500\" y2=\"40\" target=\"no\"></line><text x=\"550\" y=\"39\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"50\" x2=\"600\" y2=\"50\" target=\"no\"></line><line x1=\"500\" y1=\"55\" x2=\"500\" y2=\"50\" target=\"no\"></line><text x=\"550\" y=\"49\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"60\" x2=\"600\" y2=\"60\" target=\"no\"></line><line x1=\"500\" y1=\"55\" x2=\"500\" y2=\"60\" target=\"no\"></line><text x=\"550\" y=\"59\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"70\" x2=\"600\" y2=\"70\" target=\"no\"></line><line x1=\"500\" y1=\"75\" x2=\"500\" y2=\"70\" target=\"no\"></line><text x=\"550\" y=\"69\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"80\" x2=\"600\" y2=\"80\" target=\"no\"></line><line x1=\"500\" y1=\"75\" x2=\"500\" y2=\"80\" target=\"no\"></line><text x=\"550\" y=\"79\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"90\" x2=\"600\" y2=\"90\" target=\"no\"></line><line x1=\"500\" y1=\"95\" x2=\"500\" y2=\"90\" target=\"no\"></line><text x=\"550\" y=\"89\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"100\" x2=\"600\" y2=\"100\" target=\"no\"></line><line x1=\"500\" y1=\"95\" x2=\"500\" y2=\"100\" target=\"no\"></line><text x=\"550\" y=\"99\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"110\" x2=\"600\" y2=\"110\" target=\"no\"></line><line x1=\"500\" y1=\"115\" x2=\"500\" y2=\"110\" target=\"no\"></line><text x=\"550\" y=\"109\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"120\" x2=\"600\" y2=\"120\" target=\"no\"></line><line x1=\"500\" y1=\"115\" x2=\"500\" y2=\"120\" target=\"no\"></line><text x=\"550\" y=\"119\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"130\" x2=\"600\" y2=\"130\" target=\"no\"></line><line x1=\"500\" y1=\"135\" x2=\"500\" y2=\"130\" target=\"no\"></line><text x=\"550\" y=\"129\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"140\" x2=\"600\" y2=\"140\" target=\"no\"></line><line x1=\"500\" y1=\"135\" x2=\"500\" y2=\"140\" target=\"no\"></line><text x=\"550\" y=\"139\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"150\" x2=\"600\" y2=\"150\" target=\"no\"></line><line x1=\"500\" y1=\"155\" x2=\"500\" y2=\"150\" target=\"no\"></line><text x=\"550\" y=\"149\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"160\" x2=\"600\" y2=\"160\" target=\"no\"></line><line x1=\"500\" y1=\"155\" x2=\"500\" y2=\"160\" target=\"no\"></line><text x=\"550\" y=\"159\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"170\" x2=\"600\" y2=\"170\" target=\"no\"></line><line x1=\"500\" y1=\"175\" x2=\"500\" y2=\"170\" target=\"no\"></line><text x=\"550\" y=\"169\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"180\" x2=\"600\" y2=\"180\" target=\"no\"></line><line x1=\"500\" y1=\"175\" x2=\"500\" y2=\"180\" target=\"no\"></line><text x=\"550\" y=\"179\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"190\" x2=\"600\" y2=\"190\" target=\"no\"></line><line x1=\"500\" y1=\"195\" x2=\"500\" y2=\"190\" target=\"no\"></line><text x=\"550\" y=\"189\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"200\" x2=\"600\" y2=\"200\" target=\"no\"></line><line x1=\"500\" y1=\"195\" x2=\"500\" y2=\"200\" target=\"no\"></line><text x=\"550\" y=\"199\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"210\" x2=\"600\" y2=\"210\" target=\"no\"></line><line x1=\"500\" y1=\"215\" x2=\"500\" y2=\"210\" target=\"no\"></line><text x=\"550\" y=\"209\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"220\" x2=\"600\" y2=\"220\" target=\"no\"></line><line x1=\"500\" y1=\"215\" x2=\"500\" y2=\"220\" target=\"no\"></line><text x=\"550\" y=\"219\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"230\" x2=\"600\" y2=\"230\" target=\"yes\"></line><line x1=\"500\" y1=\"235\" x2=\"500\" y2=\"230\" target=\"yes\"></line><text x=\"550\" y=\"229\" font-size=\"12\" target=\"yes\">0</text><line x1=\"500\" y1=\"240\" x2=\"600\" y2=\"240\" target=\"no\"></line><line x1=\"500\" y1=\"235\" x2=\"500\" y2=\"240\" target=\"no\"></line><text x=\"550\" y=\"239\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"250\" x2=\"600\" y2=\"250\" target=\"no\"></line><line x1=\"500\" y1=\"255\" x2=\"500\" y2=\"250\" target=\"no\"></line><text x=\"550\" y=\"249\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"260\" x2=\"600\" y2=\"260\" target=\"no\"></line><line x1=\"500\" y1=\"255\" x2=\"500\" y2=\"260\" target=\"no\"></line><text x=\"550\" y=\"259\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"270\" x2=\"600\" y2=\"270\" target=\"no\"></line><line x1=\"500\" y1=\"275\" x2=\"500\" y2=\"270\" target=\"no\"></line><text x=\"550\" y=\"269\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"280\" x2=\"600\" y2=\"280\" target=\"no\"></line><line x1=\"500\" y1=\"275\" x2=\"500\" y2=\"280\" target=\"no\"></line><text x=\"550\" y=\"279\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"290\" x2=\"600\" y2=\"290\" target=\"no\"></line><line x1=\"500\" y1=\"295\" x2=\"500\" y2=\"290\" target=\"no\"></line><text x=\"550\" y=\"289\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"300\" x2=\"600\" y2=\"300\" target=\"no\"></line><line x1=\"500\" y1=\"295\" x2=\"500\" y2=\"300\" target=\"no\"></line><text x=\"550\" y=\"299\" font-size=\"12\" target=\"no\">1</text><line x1=\"500\" y1=\"310\" x2=\"600\" y2=\"310\" target=\"no\"></line><line x1=\"500\" y1=\"315\" x2=\"500\" y2=\"310\" target=\"no\"></line><text x=\"550\" y=\"309\" font-size=\"12\" target=\"no\">0</text><line x1=\"500\" y1=\"320\" x2=\"600\" y2=\"320\" target=\"no\"></line><line x1=\"500\" y1=\"315\" x2=\"500\" y2=\"320\" target=\"no\"></line><text x=\"550\" y=\"319\" font-size=\"12\" target=\"no\">1</text></g></svg><x-slider class=\"bracket\" steps=\"6\" speed=\"0.5\"></x-slider><p><span class=\"sentence\">We can represent any five-digit binary number by following any path from beginning to end. </span><span class=\"sentence\">For example, this is the binary sequence for <span class=\"nowrap\"><span class=\"step-target\" tabindex=\"0\" data-to=\"yes\">10110</span>.</span></span></p><p class=\"todo\"></p></x-step>"},{"id":"finger32","section":"binary","goals":["blank-0"],"html":"<x-step id=\"finger32\" goals=\"blank-0\"><h3>Fingers</h3><p><span class=\"sentence\">Yes, there are <x-blank-input solution=\"32\"></x-blank-input> different combinations we can make with five fingers.</span></p><x-select class=\"segmented\"><div>Decimal</div><div>Binary</div></x-select><table class=\"finger-grid\"> <tbody><tr><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_00.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">0</div><div class=\"caption bin\">00000</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_01.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">1</div><div class=\"caption bin\">00001</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_02.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">2</div><div class=\"caption bin\">00010</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_03.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">3</div><div class=\"caption bin\">00011</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_04.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">4</div><div class=\"caption bin\">00100</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_05.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">5</div><div class=\"caption bin\">00101</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_06.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">6</div><div class=\"caption bin\">00110</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_07.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">7</div><div class=\"caption bin\">00111</div></div></td></tr><tr><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_08.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">8</div><div class=\"caption bin\">01000</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_09.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">9</div><div class=\"caption bin\">01001</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_10.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">10</div><div class=\"caption bin\">01010</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_11.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">11</div><div class=\"caption bin\">01011</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_12.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">12</div><div class=\"caption bin\">01100</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_13.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">13</div><div class=\"caption bin\">01101</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_14.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">14</div><div class=\"caption bin\">01110</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_15.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">15</div><div class=\"caption bin\">01111</div></div></td></tr><tr><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_16.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">16</div><div class=\"caption bin\">10000</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_17.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">17</div><div class=\"caption bin\">10001</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_18.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">18</div><div class=\"caption bin\">10010</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_19.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">19</div><div class=\"caption bin\">10011</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_20.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">20</div><div class=\"caption bin\">10100</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_21.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">21</div><div class=\"caption bin\">10101</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_22.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">22</div><div class=\"caption bin\">10110</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_23.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">23</div><div class=\"caption bin\">10111</div></div></td></tr><tr><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_24.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">24</div><div class=\"caption bin\">11000</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_25.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">25</div><div class=\"caption bin\">11001</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_26.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">26</div><div class=\"caption bin\">11010</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_27.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">27</div><div class=\"caption bin\">11011</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_28.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">28</div><div class=\"caption bin\">11100</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_29.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">29</div><div class=\"caption bin\">11101</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_30.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">30</div><div class=\"caption bin\">11110</div></div></td><td><div class=\"bin-finger\" padding=\"1px\"><x-img src=\"/resources/codes/images/fingers/binary_31.jpg\" width=\"64\" height=\"64\"></x-img><div class=\"caption dec\">31</div><div class=\"caption bin\">11111</div></div></td></tr></tbody></table><button class=\"appear\">APPEAR</button><button class=\"switch\">SWITCH</button><p class=\"TODO\"></p><p><span class=\"sentence\">(we'll find out soon why we started with zero). </span><span class=\"sentence\">Click on the <x-target to=\".switch\">SWITCH</x-target> button to toggle between our binary values and their decimal counterparts. </span><span class=\"sentence\">These are the values</span></p></x-step>"},{"id":"step-20","section":"binary","goals":[],"html":"<x-step id=\"step-20\" goals=\"\"><p class=\"todo\"> Transistors</p><p><span class=\"sentence\">Now that we have learned a bit about how we can represent different values by strings of 0s and 1s, let's tie this back to transistors. </span><span class=\"sentence\">Recall how in our morse code/flashlight examples we were constrained by our medium’s ability to be on or off. </span><span class=\"sentence\">Computers store data in transistors, so they store data as a collection of ons and offs, or 1s and 0s. </span><span class=\"sentence\">Just like we just did with our fingers (by putting them up or down). </span><span class=\"sentence\">If a computer had fingers, they would probably count to 31 on one hand. </span><span class=\"sentence\">Everything that’s stored on a computer, from text and images to video and sound is stored in transistors as sequences of 1s and 0s, or binary code.</span></p><p><span class=\"sentence\">Another way we can imagine these transistors is with a series of lights. </span></p><table class=\"led-binary\"><tbody><tr><td><div class=\"led\" padding=\"1px\"><x-img src=\"/resources/codes/images/light_on.png\"></x-img></div></td><td><div class=\"led\" padding=\"1px\"><x-img src=\"/resources/codes/images/light_off.png\"></x-img></div></td><td><div class=\"led\" padding=\"1px\"><x-img src=\"/resources/codes/images/light_off.png\"></x-img></div></td><td><div class=\"led\" padding=\"1px\"><x-img src=\"/resources/codes/images/light_on.png\"></x-img></div></td><td><div class=\"led\" padding=\"1px\"><x-img src=\"/resources/codes/images/light_on.png\"></x-img></div></td><td><div class=\"led\" padding=\"1px\"><x-img src=\"/resources/codes/images/light_off.png\"></x-img></div></td><td><div class=\"led\" padding=\"1px\"><x-img src=\"/resources/codes/images/light_on.png\"></x-img></div></td><td><div class=\"led\" padding=\"1px\"><x-img src=\"/resources/codes/images/light_on.png\"></x-img></div></td></tr></tbody></table><p><span class=\"sentence\">This is how the sequence <em class=\"ns g\">10011011</em> would be stored.</span></p></x-step>"},{"id":"step-21","section":"binary","goals":["blank-0","blank-1","blank-2","blank-3","blank-4","blank-5","blank-6","blank-7","blank-8"],"html":"<x-step id=\"step-21\" goals=\"blank-0 blank-1 blank-2 blank-3 blank-4 blank-5 blank-6 blank-7 blank-8\"><h2>Binary to Base-Ten</h2><p><span class=\"sentence\">Before we can understand how computers use binary code to store complex things like sound and video, we must first understand the basics, like how a base-ten number is stored.</span></p><p><span class=\"sentence\">Our number system operates as a <x-gloss xid=\"base-10\">base ten</x-gloss> number system. </span><span class=\"sentence\">Base ten numbers have ten possible values for each digit. </span><span class=\"sentence\">0 1 2 3 4 5 6 7 8 and 9. </span><span class=\"sentence\">In a base-ten number, each digit is worth ten times as much as the previous smaller digit. </span><span class=\"sentence\">The first right-most digit represents how many <x-blank><button class=\"choice\">ones</button><button class=\"choice\">tens</button><button class=\"choice\">twos</button></x-blank> there are, the second right-most digit represents how many <x-blank><button class=\"choice\">tens</button><button class=\"choice\">hundreds</button><button class=\"choice\">fives</button></x-blank> there are, and so on.</span></p><p><span class=\"sentence\">The value represented by each digit is the digit number times the value of the digit. </span><span class=\"sentence\">So A four in the hundreds place represents the value <span class=\"nowrap\"><x-blank-input solution=\"400\"></x-blank-input>.</span></span></p><table class=\"table-small grid\"> <tbody><tr> <td><strong>number</strong></td><td><strong>hundreds value</strong></td><td><strong>tens value</strong></td><td><strong>ones value</strong></td></tr> <tr> <td>432</td><td><x-blank-input solution=\"400\"></x-blank-input></td><td><x-blank-input solution=\"30\"></x-blank-input></td><td><x-blank-input solution=\"2\"></x-blank-input></td></tr> <tr> <td>907</td><td><x-blank-input solution=\"900\"></x-blank-input></td><td><x-blank-input solution=\"0\"></x-blank-input></td><td><x-blank-input solution=\"7\"></x-blank-input></td></tr> </tbody></table> <p><span class=\"sentence\">To find the value of a base ten number, we add up the values of each digit!</span></p></x-step>"},{"id":"step-22","section":"binary","goals":["blank-0","blank-1","blank-2","blank-3","blank-4","blank-5"],"html":"<x-step id=\"step-22\" goals=\"blank-0 blank-1 blank-2 blank-3 blank-4 blank-5\"><p><span class=\"sentence\">Binary numbers work very similarly except they use a base-two number system. </span><span class=\"sentence\">So instead of ten possible digit values, they only have 2. </span><span class=\"sentence\">Each consective digit is worth <x-blank><button class=\"choice\">twice</button><button class=\"choice\">three times</button><button class=\"choice\">ten times</button></x-blank> as much as the previous digit. </span><span class=\"sentence\">And because in a binary number each digit can either be <strong>1</strong> or <strong>0</strong>, each digit value can be either <strong>on</strong> or <strong>off</strong>.</span></p><p><span class=\"sentence\">Let's examine the binary number <em class=\"ns g\">11111</em> (5 consecutive 1s). </span><span class=\"sentence\">How much is each digit worth?</span></p><table class=\"table-small grid\"> <tbody><tr> <td><strong class=\"m-red\">digit</strong></td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr> <tr> <td><strong class=\"m-green\">digit value</strong></td><td class=\"s-green\"><em class=\"n\"><x-blank-input solution=\"16\"></x-blank-input></em></td><td class=\"s-green\"><em class=\"n\"><x-blank-input solution=\"8\"></x-blank-input></em></td><td class=\"s-green\"><em class=\"n\"><x-blank-input solution=\"4\"></x-blank-input></em></td><td class=\"s-green\"><em class=\"n\"><x-blank-input solution=\"2\"></x-blank-input></em></td><td class=\"s-green\"><em class=\"n\"><x-blank-input solution=\"1\"></x-blank-input></em></td></tr> </tbody></table> </x-step>"},{"id":"step-23","section":"binary","goals":["blank-0"],"html":"<x-step id=\"step-23\" goals=\"blank-0\"><p><span class=\"sentence\">We can find the decimal value of this binary number <em class=\"ns g\">11111</em> by adding up the digit values. </span><span class=\"sentence\">So its value is <em>not</em> eleven thousand, one-hundred and eleven, but is </span></p><p class=\"text-center s-red\"><span class=\"sentence\"> <em class=\"n\">16</em> + <em class=\"n\">8</em> + <em class=\"n\">4</em> + <em class=\"n\">2</em> + <em class=\"n\">1</em> = <em class=\"n\"><x-blank-input solution=\"31\"></x-blank-input></em></span></p></x-step>"},{"id":"step-24","section":"binary","goals":["blank-0","blank-1","blank-2","blank-3","blank-4","blank-5","blank-6","blank-7","blank-8","blank-9","blank-10","blank-11","blank-12"],"html":"<x-step id=\"step-24\" goals=\"blank-0 blank-1 blank-2 blank-3 blank-4 blank-5 blank-6 blank-7 blank-8 blank-9 blank-10 blank-11 blank-12\"><p><span class=\"sentence\">Here are some 6-digit binary numbers. </span><span class=\"sentence\">Let's convert them to decimal by first writing the values of each digit, and then adding the digits together.</span></p><p class=\"text-center s-purple\"><span class=\"sentence\"> <em class=\"ns\">100110</em> = <em class=\"n\"><x-blank-input solution=\"32\"></x-blank-input></em> + <em class=\"n z\">0</em> + <em class=\"n z\">0</em> + <em class=\"n\"><x-blank-input solution=\"4\"></x-blank-input></em> + <em class=\"n\"><x-blank-input solution=\"2\"></x-blank-input></em> + <em class=\"n z\">0</em> = <em class=\"n\"><x-blank-input solution=\"38\"></x-blank-input></em></span></p><p class=\"text-center s-yellow\"><span class=\"sentence\"> <em class=\"ns y\">111000</em> = <em class=\"n\"><x-blank-input solution=\"32\"></x-blank-input></em> + <em class=\"n\"><x-blank-input solution=\"16\"></x-blank-input></em> + <em class=\"n\"><x-blank-input solution=\"8\"></x-blank-input></em> + <em class=\"n z\">0</em> + <em class=\"n z\">0</em> + <em class=\"n z\">0</em> = <em class=\"n\"><x-blank-input solution=\"56\"></x-blank-input></em></span></p><p class=\"text-center s-teal\"><span class=\"sentence\"> <em class=\"ns g\">101011</em> = <em class=\"n\"><x-blank-input solution=\"32\"></x-blank-input></em> + <em class=\"n z\">0</em> + <em class=\"n\"><x-blank-input solution=\"8\"></x-blank-input></em> + <em class=\"n z\">0</em> + <em class=\"n\"><x-blank-input solution=\"2\"></x-blank-input></em> + <em class=\"n\"><x-blank-input solution=\"1\"></x-blank-input></em> = <em class=\"n\"><x-blank-input solution=\"43\"></x-blank-input></em></span></p><p><span class=\"sentence\">When computers (including digital calculators) add and subtract numbers, this is how the numbers are represented at the level of the transistor!</span></p></x-step>"},{"id":"dec2bin","section":"binary","goals":["slide-0","slide-1","slide-2","slide-3","slide-4","slide-5","slide-6","slide-7","slide-8","slide-9"],"html":"<x-step id=\"dec2bin\" goals=\"slide-0 slide-1 slide-2 slide-3 slide-4 slide-5 slide-6 slide-7 slide-8 slide-9\"><h2>Converting Base-Ten to Binary</h2><p><span class=\"sentence\">Now that we know how to convert a binary to decimal, how can we convert a decimal to a binary number? </span><span class=\"sentence\">This solution is not as obvious. </span><span class=\"sentence\">Follow the animation below to visualize how to break a decimal number into binary digits.</span></p><p><span class=\"sentence\">Imagine a conveyor belt that slides a large block of a gelatin-like material. </span><span class=\"sentence\">This block has a length of a discrete integer. </span><span class=\"sentence\">Along the conveyor belts are claws that can only fit the size of 2^N multiples. </span><span class=\"sentence\">The claw will ONLY pick up a slice of its exact size, and will subtract it from the block. </span><span class=\"sentence\">The block slides along until it has gone under each and every one of the claws (digits).</span></p><p class=\"fixme\"><span class=\"sentence\"> make this design more consistent with the rest of Mathigon. </span><span class=\"sentence\">{.fixme} there is potential to make the text in the slide legends point to the diagram (see third slide)</span></p><x-slideshow><div class=\"stage cheesecake\" slot=\"stage\"><figure> <svg width=\"1086px\" height=\"362px\" viewBox=\"0 0 1086 362\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <title>ch_full</title> <desc>Created with Sketch.</desc> <g id=\"dec2binCHEESE\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"> <g id=\"ch_full\" transform=\"translate(1, 1)\"> <rect id=\"bkg\" stroke=\"#979797\" fill=\"#FFFFFF\" x=\"0\" y=\"0\" width=\"1084\" height=\"360\"></rect> <g id=\"blockN\" transform=\"translate(166, 234)\"> <rect fill=\"#22AB24\" x=\"0\" y=\"0\" width=\"250\" height=\"50\"></rect> <text font-family=\"Source Sans Pro,Helvetica,sans-serif\" font-size=\"20\" font-weight=\"normal\" fill=\"#FFFFFF\"> <tspan x=\"111\" y=\"32\">25</tspan> </text> </g> <g id=\"digitText\" transform=\"translate(468, 60)\"> <text id=\"digit16\" transform=\"translate(0, 0)\" font-family=\"Source Sans Pro,Helvetica,sans-serif\" font-size=\"40\" font-weight=\"normal\" fill=\"#000000\"> <tspan x=\"75\" y=\"32\">1</tspan> </text> <text id=\"digit8\" transform=\"translate(227, 0)\" font-family=\"Source Sans Pro,Helvetica,sans-serif\" font-size=\"40\" font-weight=\"normal\" fill=\"#000000\"> <tspan x=\"35\" y=\"32\">1</tspan> </text> <text id=\"digit4\" transform=\"translate(374, 0)\" font-family=\"Source Sans Pro,Helvetica,sans-serif\" font-size=\"40\" font-weight=\"normal\" fill=\"#000000\"> <tspan x=\"15\" y=\"32\">0</tspan> </text> <text id=\"digit2\" transform=\"translate(445, 0)\" font-family=\"Source Sans Pro,Helvetica,sans-serif\" font-size=\"40\" font-weight=\"normal\" fill=\"#000000\"> <tspan x=\"5\" y=\"32\">0</tspan> </text> <text id=\"digit1\" transform=\"translate(496, 0)\" font-family=\"Source Sans Pro,Helvetica,sans-serif\" font-size=\"40\" font-weight=\"normal\" fill=\"#000000\"> <tspan x=\"0\" y=\"32\">1</tspan> </text> </g> <g id=\"blocks\" transform=\"translate(473, 0)\"> <g id=\"block16\" transform=\"translate(0, 234)\"> <rect fill=\"#22AB24\" x=\"0\" y=\"0\" width=\"160\" height=\"50\"></rect> <text font-family=\"Source Sans Pro,Helvetica,sans-serif\" font-size=\"20\" font-weight=\"normal\" fill=\"#FFFFFF\"> <tspan x=\"75\" y=\"32\">16</tspan> </text> </g> <g id=\"block8\" transform=\"translate(227, 234)\"> <rect fill=\"#22AB24\" x=\"0\" y=\"0\" width=\"80\" height=\"50\"></rect> <text font-family=\"Source Sans Pro,Helvetica,sans-serif\" font-size=\"20\" font-weight=\"normal\" fill=\"#FFFFFF\"> <tspan x=\"35\" y=\"32\">8</tspan> </text> </g> <g id=\"block4\" transform=\"translate(374, 234)\"> <rect fill=\"#22AB24\" x=\"0\" y=\"0\" width=\"40\" height=\"50\"></rect> <text font-family=\"Source Sans Pro,Helvetica,sans-serif\" font-size=\"20\" font-weight=\"normal\" fill=\"#FFFFFF\"> <tspan x=\"15\" y=\"32\">4</tspan> </text> </g> <g id=\"block2\" transform=\"translate(445, 234)\"> <rect fill=\"#22AB24\" x=\"0\" y=\"0\" width=\"20\" height=\"50\"></rect> <text font-family=\"Source Sans Pro,Helvetica,sans-serif\" font-size=\"20\" font-weight=\"normal\" fill=\"#FFFFFF\"> <tspan x=\"5\" y=\"32\">2</tspan> </text> </g> <g id=\"block1\" transform=\"translate(496, 234)\"> <rect fill=\"#22AB24\" x=\"0\" y=\"0\" width=\"10\" height=\"50\"></rect> <text font-family=\"Source Sans Pro,Helvetica,sans-serif\" font-size=\"20\" font-weight=\"normal\" fill=\"#FFFFFF\"> <tspan x=\"0\" y=\"32\">1</tspan> </text> </g> </g> <g id=\"claws16\" transform=\"translate(473, 106)\" fill=\"#4A4A4A\"> <g id=\"thingy16\"> <path d=\"M160,92 L160,42 L2,42 L2,92 L0,92 L0,40 L162,40 L162,92 L162,92 Z\" id=\"thing16\"></path> <rect id=\"Rectangle\" x=\"81\" y=\"0\" width=\"2\" height=\"40\"></rect> </g> <g id=\"thingy8\" transform=\"translate(227, 0)\"> <path d=\"M80,92 L80,42 L2,42 L2,92 L0,92 L0,40 L82,40 L82,92 L82,92 Z\" id=\"thing8\"></path> <rect id=\"Rectangle-Copy-4\" x=\"41\" y=\"0\" width=\"2\" height=\"40\"></rect> </g> <g id=\"thingy4\" transform=\"translate(374, 0)\"> <path d=\"M40,92 L40,42 L2,42 L2,92 L0,92 L0,40 L42,40 L42,92 L42,92 Z\" id=\"thing4\"></path> <rect id=\"Rectangle-Copy-5\" x=\"21\" y=\"0\" width=\"2\" height=\"40\"></rect> </g> <g id=\"thingy2\" transform=\"translate(445, 0)\"> <path d=\"M20,92 L20,42 L2,42 L2,92 L0,92 L0,40 L22,40 L22,92 Z\" id=\"thing2\"></path> <rect id=\"Rectangle-Copy-6\" x=\"11\" y=\"0\" width=\"2\" height=\"40\"></rect> </g> <g id=\"thingy1\" transform=\"translate(496, 0)\"> <path d=\"M10,92 L10,42 L2,42 L2,92 L0,92 L0,40 L12,40 L12,92 Z\" id=\"thing1\"></path> <rect id=\"Rectangle-Copy-7\" x=\"6\" y=\"0\" width=\"2\" height=\"40\"></rect> </g> </g> <rect id=\"ceiling\" fill=\"#4A4A4A\" x=\"470\" y=\"96\" width=\"513\" height=\"10\"></rect> <rect id=\"floor\" fill=\"#4A4A4A\" x=\"150\" y=\"284\" width=\"843\" height=\"10\"></rect> </g> </g> </svg></figure></div><div class=\"legend\" slot=\"legend\">We have a full block of length <strong>25</strong>.</div><div class=\"legend\" slot=\"legend\">We always start with the leftmost digit. In this case, 16 is the largest power of 2 that can fit into 25. So first we test the <strong>16s</strong> place.</div><div class=\"legend\" slot=\"legend\">We can subtract 16, so we write a [1 in the 16s place](-&gt;.#digit16). We're left with <strong>9</strong>.</div><div class=\"legend\" slot=\"legend\">Next we test the <strong>8s</strong> place. </div><div class=\"legend\" slot=\"legend\">We can subtract 8, so we write a <strong>1</strong> in the 8s place. We're left with <strong>1</strong>.</div><div class=\"legend\" slot=\"legend\">Next we test the <strong>4s</strong> place.</div><div class=\"legend\" slot=\"legend\">We cannot subtract 4, so we write a <strong>0</strong> in the 4s place.</div><div class=\"legend\" slot=\"legend\">Next we test the <strong>2s</strong> place.</div><div class=\"legend\" slot=\"legend\">We cannot subtract 2, so we write a <strong>0</strong> in the 2s place.</div><div class=\"legend\" slot=\"legend\">Next we test the <strong>1s</strong> place.</div><div class=\"legend\" slot=\"legend\">We can subtract 1, so we write a <strong>1</strong> in the 1s place. We're left with 0, and we are finished.</div></x-slideshow><p class=\"fixme\"><span class=\"sentence\"> I'm not sure exactly how to format this, Could just leave as is, or could do as a proof (see below).</span></p><p><span class=\"sentence\">Here is that simple method put into steps. </span><span class=\"sentence\"> When converting decimal number N into binary:</span></p><ol> <li><span class=\"sentence\">Start with the highest power of 2^n, d, that you can subtract from N. </span></li><li><span class=\"sentence\">If you can subtract d from N, then write a 1 in that place and continue with N = N - d.</span></li><li><span class=\"sentence\">If you cannot subtract d from N, then write a 0 in that place and continue with N = N.</span></li><li><span class=\"sentence\">Divide d by 2 to get the next digits place.</span></li><li><span class=\"sentence\">Repeat steps 2 through 4 until you have written the 1s place.</span></li></ol> <p class=\"fixme\"><span class=\"sentence\"> I don't think \"proof\" is the right format, but it should look something like this. </span><span class=\"sentence\">Here are the steps generalized:</span></p><ol class=\"proof\"><li><span class=\"sentence\">Find the highest power of 2 that you can subtract from <em>N</em>, let's call it <em>d</em></span></li><li><span class=\"sentence\">Subtract <em>d</em> from <em>N</em> to get how much you have left. </span><span class=\"sentence\">Write a 1 in the first digit. </span><span class=\"sentence\">Let's call this value <em>N'</em></span></li><li><span class=\"sentence\">Divide <em>d</em> by 2 to get the next digits place. </span><span class=\"sentence\">This will always be the next highetst power of 2.</span></li><li><span class=\"sentence\">If you can subtract <em>d</em> from <em>N'</em> (if N' &gt; d), then do so and go back to Step 2. </span><span class=\"sentence\">Otherwise, do not subtract and write a 0.</span></li><li><span class=\"sentence\">Repeat steps <span class=\"proof-step\">3</span> and <span class=\"proof-step\">4</span> until you've done all digits.</span></li></ol></x-step>"},{"id":"step-26","section":"binary","goals":[],"html":"<x-step id=\"step-26\" goals=\"\"><h2>Other places you might find binary patterns.</h2><p><span class=\"sentence\">If you look around, you can find patterns related to binary numbers in computers, and in some other unexpected places!</span></p><div class=\"row padded padded-thin\"><div style=\"width: 160px\"> <x-img src=\"/resources/codes/images/smartphone.png\" width=\"160\" height=\"160\" alt=\"Color Hex Codes\"></x-img></div><div style=\"width: 400px\"> <p><span class=\"sentence\">When you’re looking to buy any digital device with memory like a Smartphone, Tablet, Computer, or SD Card the options often come with <strong>Memory</strong> options that are a power of 2, like 16GB, 32GB, or 64GB.</span></p></div><div style=\"width: 160px\"> <x-img src=\"/resources/codes/images/colors_mathigon.png\" width=\"160\" height=\"160\" alt=\"Color Hex Codes\"></x-img></div><div style=\"width: 400px\"> <p><span class=\"sentence\"> <strong>Colors</strong> on computers are stored using a combination of letters and numbers. </span><span class=\"sentence\">This is another base system called <strong>hexadecimal</strong>, which is a base-16 system. </span><span class=\"sentence\">Each color has a Red, a Green, and a Blue value, each of which is a number between 0 and 255.</span></p></div><div style=\"width: 160px\"> <x-img src=\"/resources/codes/images/whatsapp.png\" width=\"160\" height=\"160\" alt=\"Color Hex Codes\"></x-img></div><div style=\"width: 400px\"> <p><span class=\"sentence\">In 2016, the messaging app <strong>WhatsApp</strong> increased the maximum number of possible users in a single group to 256 (2^8).</span></p></div><div style=\"width: 160px\"> <x-img src=\"/resources/codes/images/ncaa_tourney.png\" width=\"160\" height=\"160\" alt=\"Bracket\"></x-img></div><div style=\"width: 400px\"> <p><span class=\"sentence\"> Many sports tournaments start with a number of teams that is a power of two. </span><span class=\"sentence\">The <strong>NCAA Basketball Tournament</strong> begins with 64 (2^6) teams and has rounds called “The Sweet Sixteen”, “The Elite Eight”, and “The Final Four” (each of which is a power of two!).</span></p></div><div style=\"width: 160px\"> <x-img src=\"/resources/codes/images/i-ching.png\" width=\"160\" height=\"160\" alt=\"I-ching\"></x-img></div><div style=\"width: 400px\"> <p><span class=\"sentence\">The <strong>I-Ching</strong> is an ancient Chinese divination text. </span><span class=\"sentence\">It contains 64 different \"Hexagrams\", each of which is made up of six horizontal lines which can be either solid (Yang) or divided (Yin). </span></p></div></div> <h2>Conclusion</h2><p class=\"todo\"> Conclusion</p><p><span class=\"sentence\">Now that you've learned about binary numbers, you can make this joke to your friends:</span></p><p class=\"fixme\"><span class=\"sentence\"> Make this bigger and centered.</span></p><p><span class=\"sentence\"><strong>There are only 10 types of people in the world:</strong> <strong>those who understand binary,</strong> <strong>and those who don't.</strong></span></p></x-step>"},{"section":"error-detection","sectionStatus":"dev","id":"step-27","goals":[],"html":"<x-step id=\"step-27\" goals=\"\"><h2>Introduction</h2><p class=\"todo\"> Satellite Communications</p><p class=\"fixme\"><span class=\"sentence\"> We send satellites <em>very far away</em>. </span><span class=\"sentence\">Voyager 1 is now <em>13 billion miles</em> away from Earth. </span><span class=\"sentence\">NASA spent three years making this satellite, investing millions of dollars and millions of work-hours into its creation.... </span><span class=\"sentence\">etc</span></p><p class=\"todo\"> animation of a satellite streaming bits to a receiver on Earth.</p></x-step>"},{"section":"error-detection","sectionStatus":"dev","id":"barcode-intro","goals":[],"html":"<x-step id=\"barcode-intro\" goals=\"\"><h2>Bar Codes</h2><p class=\"todo\"> Bar Code</p><div><div class=\"quote\"><i>remember I was thinking about dots and dashes when I poked my four fingers into the sand and, for whatever reason--I didn't know--I pulled my hand toward me and I had four lines. I said 'Golly! Now I have four lines and they could be wide lines and narrow lines, instead of dots and dashes. Now I have a better chance of finding the doggone thing.' Then only seconds later, I took my four fingers--they were still in the sand--and I swept them round in a circle.</i></div><div class=\"author\"><joe>Woodland, inventor of the Bar Code</joe></div></div><h3>So how does it work?</h3><p class=\"fixme\"><span class=\"sentence\"> Each bar code is a 12-digit number. </span><span class=\"sentence\">See here that we can read the numbers written on the bottom. </span><span class=\"sentence\">But how does a computer read it?</span></p><p class=\"todo\"> image/interaction of a bar code</p></x-step>"},{"id":"barcode-drawing","section":"error-detection","goals":[],"html":"<x-step id=\"barcode-drawing\" goals=\"\"><h3>Bar code values</h3><p><span class=\"sentence\">Look at this barcode.</span></p><x-barcode value=\"012345678901\"></x-barcode><p><span class=\"sentence\">The guards are on the <span class=\"step-target pill b red\" tabindex=\"0\" data-to=\".bar-start\">outside</span> and in the <span class=\"nowrap\"><span class=\"step-target pill b red\" tabindex=\"0\" data-to=\".bar-middle\">center</span>.</span> The first six digits are on the <span class=\"nowrap\"><span class=\"step-target pill b blue\" tabindex=\"0\" data-to=\".bar-left\">left</span>.</span> The last six digits are on the <span class=\"nowrap\"><span class=\"step-target pill b green\" tabindex=\"0\" data-to=\".bar-right\">right</span>.</span></span></p><p><span class=\"sentence\"><strong>The Guards</strong></span></p><table> <thead> <tr> <th>LEFT</th><th>CENTER</th><th>RIGHT</th></tr> </thead> <tbody><tr> <td>101</td><td>01010</td><td>101</td></tr> </tbody></table> <p><span class=\"sentence\"><strong>The Digits</strong></span></p><table> <thead> <tr> <th>LEFT SIDE</th><th></th><th>RIGHT SIDE</th><th></th></tr> </thead> <tbody><tr> <td>0</td><td>0001101</td><td>0</td><td>1110010</td></tr> <tr> <td>1</td><td>0xxxxx1</td><td>1</td><td>1xxxxx0</td></tr> </tbody></table> </x-step>"},{"id":"step-30","section":"error-detection","goals":[],"html":"<x-step id=\"step-30\" goals=\"\"><h2>Hamming Codes</h2><p class=\"todo\"> Hamming Codes</p></x-step>"},{"id":"step-31","section":"error-detection","goals":[],"html":"<x-step id=\"step-31\" goals=\"\"><h2>Other Error Detection and Correction</h2><p class=\"todo\"> CDs and DVDs</p></x-step>"},{"section":"cryptography","sectionStatus":"dev","id":"step-32","goals":[],"html":"<x-step id=\"step-32\" goals=\"\"><p><span class=\"sentence\">The science of creating secret codes is called <strong>Cryptography</strong> and the are of breaking them is called <strong>Cryptanalysis</strong>.</span></p><p><span class=\"sentence\">When designing ciphers, there are several possible objectives:</span></p><ul> <li><span class=\"sentence\"><strong>Secrecy:</strong> </span><span class=\"sentence\">A and B can be sure that no third party X can read the message.</span></li><li><span class=\"sentence\"><strong>Integrity:</strong> </span><span class=\"sentence\">A and B can be sure that no third party X can alter the message while it is being transmitted.</span></li><li><span class=\"sentence\"><strong>Secrecy:</strong> </span><span class=\"sentence\">B can be sure that the message actually comes from A, and not from some impostor.</span></li></ul> <p><span class=\"sentence\">Length of security (hours, years), level of security</span></p></x-step>"},{"id":"caesar_cipher","section":"cryptography","goals":[],"html":"<x-step id=\"caesar_cipher\" goals=\"\"><h2>The Caesar Cipher</h2><p><span class=\"sentence\">https://plus.maths.org/content/cracking-codes</span></p><p><span class=\"sentence\">The diagram below shows how plaintext letters [{.letter.plain} *] are converted into cipher letters [{.letter.cipher} *]. </span><span class=\"sentence\">The chart also shows the relative frequency of every letter in your text, as well as the entire english language.</span></p><p><span class=\"sentence\">Once you know the pattern the Caesar cipher is very easy to break: </span><span class=\"sentence\">you just have to try all &lt;25&gt; possibilities. </span><span class=\"sentence\">Try to decode the following secret messages:</span></p><p class=\"todo\"> TODO</p></x-step>"},{"id":"step-34","section":"cryptography","goals":[],"html":"<x-step id=\"step-34\" goals=\"\"><h2>Substitution Cipher</h2><p><span class=\"sentence\">It is not hard to make the Caesar cipher more secure: </span><span class=\"sentence\">rather than shifting the letters we could scramble all of them randomly. </span><span class=\"sentence\">Now there are not only 25 but 26! </span><span class=\"sentence\">= 403,291,461,126,605,635,584,000,000 possibilities. </span><span class=\"sentence\">Even using a computer it would take very long to check all possible combinations.</span></p><p class=\"todo\"> Substitution Cipher Encoding Interactive</p></x-step>"},{"id":"step-35","section":"cryptography","goals":[],"html":"<x-step id=\"step-35\" goals=\"\"><p><span class=\"sentence\">But it turns out that if we have a sufficiently long section of text, even the substitution cipher is easy to crack – using what we know about the language of the original plaintext.</span></p><p><span class=\"sentence\">In every language, some letters are more common than others. </span><span class=\"sentence\">This means that the ciphertext should also contain some letters more often than others.</span></p><p class=\"todo\"> Substitution Cipher Decoding Setp-by-step demo</p></x-step>"},{"id":"step-36","section":"cryptography","goals":[],"html":"<x-step id=\"step-36\" goals=\"\"><p><span class=\"sentence\">Now it is your turn: </span><span class=\"sentence\">try decoding the following messages which have been encoded using substitution ciphers:</span></p><p class=\"todo\"> Substitution Cipher Decoding Interactive</p></x-step>"},{"id":"step-37","section":"cryptography","goals":[],"html":"<x-step id=\"step-37\" goals=\"\"><h2>One Time Pads</h2><p class=\"todo\"> TODO</p></x-step>"},{"id":"step-38","section":"cryptography","goals":[],"html":"<x-step id=\"step-38\" goals=\"\"><h2>The Vigenère Cipher</h2><p class=\"todo\"> TODO</p></x-step>"},{"section":"enigma","sectionStatus":"dev","id":"step-39","goals":[],"html":"<x-step id=\"step-39\" goals=\"\"><p><span class=\"sentence\">http://plus.maths.org/content/exploring-enigma https://www.youtube.com/watch?v=mcX7iO_XCFA</span></p><p class=\"todo\"> TODO</p><template id=\"enigma\"><div class=\"enigma\"><div class=\"lightboard\"><div class=\"key\">q</div><div class=\"key\">w</div><div class=\"key\">e</div><div class=\"key\">r</div><div class=\"key\">t</div><div class=\"key\">y</div><div class=\"key\">u</div><div class=\"key\">i</div><div class=\"key\">o</div><div class=\"key\">p</div><div class=\"key\">a</div><div class=\"key\">s</div><div class=\"key\">d</div><div class=\"key\">f</div><div class=\"key\">g</div><div class=\"key\">h</div><div class=\"key\">j</div><div class=\"key\">k</div><div class=\"key\">l</div><div class=\"key\">z</div><div class=\"key\">x</div><div class=\"key\">c</div><div class=\"key\">v</div><div class=\"key\">b</div><div class=\"key\">n</div><div class=\"key\">m</div></div><div class=\"keyboard\"><div class=\"key\">q</div><div class=\"key\">w</div><div class=\"key\">e</div><div class=\"key\">r</div><div class=\"key\">t</div><div class=\"key\">y</div><div class=\"key\">u</div><div class=\"key\">i</div><div class=\"key\">o</div><div class=\"key\">p</div><div class=\"key\">a</div><div class=\"key\">s</div><div class=\"key\">d</div><div class=\"key\">f</div><div class=\"key\">g</div><div class=\"key\">h</div><div class=\"key\">j</div><div class=\"key\">k</div><div class=\"key\">l</div><div class=\"key\">z</div><div class=\"key\">x</div><div class=\"key\">c</div><div class=\"key\">v</div><div class=\"key\">b</div><div class=\"key\">n</div><div class=\"key\">m</div></div></div></template><x-enigma></x-enigma></x-step>"},{"section":"rsa","sectionStatus":"dev","id":"step-40","goals":[],"html":"<x-step id=\"step-40\" goals=\"\"><p class=\"todo\"> TODO</p></x-step>"}],"goals":69,"title":"Codes and Ciphers"}