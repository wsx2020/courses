# ==============================================================================
# MATHIGON GLOSSARY
# ==============================================================================

absolute-value:
  title: Absolute value
  text: The __absolute value__ of a number is its distance from 0 on the number
    line. It makes negative numbers positive, but leaves positive numbers
    unchanged. The absolute value of `x` is written as `|x|`. For example,
    `|-5| = 5` and `|3| = 3`.
  # The absolute value of a number is the distance between the number and the
  # origin. This connects the notion of _absolute value_ to the modulus of a
  # complex number and the magnitude of a vector.

acute-angle:
  title: Acute angle
  text: An __acute angle__ is an angle of size less than 90°.

acute-triangle:
  title: Acute triangle
  text: In an __acute triangle__, all three interior angles are _acute_
    (less than 90°).
  link: /course/triangles/properties#classification

adic:
  title: N-adic Numbers
  text: __*N*-adic__ numbers, for some integer _n_, are a special number system,
    with a definition of “closeness” that is different from usual arithmetic.
    Two _n_-adic numbers are _close_ if their difference is divisible by a high
    power of _n_.

adjacent-angles:
  title: Adjacent angles
  text: Two angles are __adjacent__ if they share a common side and vertex but
    do not overlap. The word _adjacent_ simply means “neighbouring”.

aleph-zero:
  title: Aleph zero
  text: __Aleph zero__, written using the Hebrew letter א‎, is the cardinality of
    a countably infinite set (e.g. the natural numbers).

algebraic-numbers:
  title: Algebraic numbers
  text: |
    __Algebraic numbers__ are the subset of the real numbers, which can be
    represented as roots of a polynomial equation with integer coefficients.
    All rational numbers (like `2/3`) and surds (like `root(3,5)`) are
    algebraic, and so are numbers that can be build from surds (like
    `(2 + sqrt(3))/(1 - sqrt(5))`.

    Those numbers which are real but _not_ algebraic are called _transcendental
    numbers_.

algorithm:
  title: Algorithm
  text: |
    An __algorithm__ is a set of rules or instructions that can be used to
    solve a specific problem. They are commonly used by computers, and appear
    everywhere in mathematics: from _long division_ to _Gaussian elimination_.

alternate-angles:
  title: Alternate angles
  text: |
    __Alternate angles__ are formed by two _parallel lines_ which are crossed
    by a _traversal_ line, and they are always congruent. In the diagram below,
    each of the pairs of angles labelled 1, 2, 3 and 4 are alternate. The two
    angles in every pair lie on a different parallel line, and opposite sides
    of the traversal.

    The angle pairs 1 and 2 are called __alternate exterior angles__, because
    they lie outside the parallel lines, and the angle pairs 3 and 4 are
    called __alternate interior angles__.
  # TODO Image

amino-acid:
  title: Amino acid
  text: |
    __Amino acids__ are tiny organic compounds that make up __proteins__. They
    are some of the key building blocks of all living organisms.

    In our body, amino acids are used to break down food, repair body tissue,
    store energy, and for many other functions.

angle:
  title: Angle
  text: An __angle__ is formed by two rays that share a common endpoint. Each
    ray is called a side of the angle. the size of an angle is usually measured
    in _degrees_ or _radians_.

angle-bisector:
  title: Angle bisector
  text: An __angle bisector__ is a line or ray that splits an angle in half,
    into two congruent, smaller angles.
  image: angle-bisector.svg

anti-dot:
  title: Anti-dot
  text: The cells in a dot machine can contain __anti-dots__, which you can
    think of as “holes” or “negative dots”. They have a value of –1. You can
    always add a dot and an anti-dot to the same cell, without changing its
    value.

apothem:
  title: Apothem
  text: The __apothem__ of a regular polygon is the distance from the midpoint
    of one of its sides to its center.

arabic-numerals:
  title: Arabic numerals
  text: |
    The __Arabic numeral system__ uses ten different digits (0, 1, 2, 3, 4, 5,
    6, 7, 8, 9) together with a decimal place-value system, to write any number.

    It was first developed in India, then adapted by Arabic mathematicians,
    before being brought to Europe by the Italian mathematician Leonardo
    Fibonacci.

arccos:
  title: Inverse cosine
  text: |
    The __inverse cosine__ function is a trigonometric function written as
    `arccos(x)` or `cos^(-1)(x)`. It is the inverse of `cos(x)`.
  # Basic idea: To find cos-1 (½), we ask "what angle has cosine equal to ½?" The
  # answer is 60°. As a result we say cos-1 (½) = 60°. In radians this is
  # cos-1(½) = π/3. There are actually many angles that have cosine equal to ½.
  # We are really asking "what is the simplest, most basic angle that has
  # cosine equal to ½?" As before, the answer is 60°. Thus cos-1 (½) = 60° or
  # cos-1 (½) = π/3. Details: What is cos-1 (–½)? Do we choose 120°, –120°, 240°,
  # or some other angle? The answer is 120°. With inverse cosine, we select the
  # angle on the top half of the unit circle. Thus cos-1 (–½) = 120° or
  # cos-1 (–½) = 2π/3. In other words, the range of cos-1 is
  # restricted to [0, 180°] or [0, π].

archimedean-solid:
  title: Archimedean solid
  text: An __Archimedean solid__ is a polyhedron made up of different kinds of
    regular polygons, that looks the same from every direction. There are 13
    different Archimedean solids.
  link: /course/polyhedra/platonic#archimedean

arithmetic-mean:
  title: Arithmetic mean
  text: The __mean__ is the _average_ of a set of numbers. You can calculate it
    but adding up all the numbers in the set, and dividing the total by the
    number of items.

arithmetic-sequence:
  title: Arithmetic sequence
  text: An __arithmetic sequence__ (sometimes called __arithmetic progression__)
    is a sequence of numbers in which the difference _d_ between consecutive
    terms is always constant.
  link: /course/sequences/arithmetic-geometric#arithmetic-geometric-1

arithmetic series:
  title: Arithmetic series
  text: An __arithmetic series__ is the sum of the terms in an arithmetic sequence.

associative:
  title: Associativity
  text: An operation • is __associative__ if `a•(b•c) = (a•b)•c`. For example,
    both addition (+) and multiplication (×) of numbers is associative.

atom:
  title: Atom
  text: |
    __Atoms__ are the particles that make up all ordinary matter: solids,
    liquids, gases and plasma. Atoms consist of a positively-charged _core_ (or
    _nucleus_), made up of _protons_ and _neutrons_, and surrounded by shells
    of negatively-charged _electrons_. The diameter of an atom is approximately
    a ten-millionth of a millimetre.

axiom:
  title: Axiom
  text: |
    An __axiom__, sometimes called __postulate__, is a mathematical statement
    that is regarded as “self-evident” and accepted without proof. It should be
    so simple that it is obviously and unquestionably true.

    Axioms form the foundation of mathematics and can be used to prove other,
    more complex results.

axis-of-symmetry:
  title: Axis of symmetry
  text: If a shape has reflectional symmetry, the __axis of symmetry__ is the
    line that divides it into two equal halves.
  image: reflectional-symmetry.svg
  link: /course/transformations/symmetry#reflectional-symmetry

base-10:
  title: Base 10
  text: The __decimal system__ (or __base 10__) is the numbering system most
    commonly used around the world. Every digit in a number can have one of ten
    different values, from 0 to 9.

bipartite-graph:
  title: Bipartite graph
  text: A (complete) __bipartite graph__ consists of two sets of vertices. Every
    vertex is connected to all the vertices in the opposite set, but none of the
    vertices in its own set.
  link: /course/graph-theory/handshakes#handshakes-4

blackjack:
  title: Blackjack
  text: __Blackjack__ is a card game in which you add up the value of multiple
    cards to get as close to 21 – but not above.

cavalieri:
  title: Cavalieri’s principle
  text: |
    __Cavalieri’s Principle__ states that if two solids have the same height
    and the same cross-sectional area at every level, then they both have the
    same volume.

    We can use this fact to derive that the volume of prisms and cylinders is
    the area of their cross-section multiplied by their height.

calculus:
  title: Calculus
  text: __Calculus__ is the branch of mathematics dealing with limits,
    derivatives, integrals, and power series. Common problems include finding
    the slope of a curve, finding extrema, finding the rate of change of a
    function, and finding the area under a curve.

center-of-rotation:
  title: Center of rotation
  text: The __center of rotation__ is the point around which a shape is being
    rotated.
  link: /course/transformations/rigid#rotations

centroid:
  title: Centroid
  text: The __centroid__ of a triangle is the point where its three medians
    intersect. It is also the “center of mass” of the triangle of uniform
    density.
  link: /course/triangles/properties#center-of-mass

# chaos:
#   title: Chaos
#   text: todo

circle:
  title: Circle
  text: A __circle__ is the set of all points in two dimensions, at a fixed
    distance (the _radius_) from a given point (the _center_).
  image: circle.svg
  link: /course/circles/introduction#radius

circle-area:
  title: Area of a circle
  text: The __area of a circle__ with radius _r_ is given by the folmula
    `A = pi r^2`.

circle-circumference:
  title: Circumference of a circle
  text: The __circumference__ of a circle is the distance around its outside
    edge. A circle with radius _r_ has circumference `C = 2 pi r`.
  link: /course/circles/introduction#radius

circle-diameter:
  title: Diameter (circle)
  text: The __diameter__ of a circle is the distance between two opposite points
    on its circumference, and passing through its center.
  link: /course/circles/introduction#radius

circle-radius:
  title: Radius
  text: The __radius__ of a circle is the distance (or a line segment) between
    its center and any point on its circumference.
  link: /course/circles/introduction#radius

circle-sector:
  title: Circle sector
  text: |
    A __sector__ of a circle is a part of its interior, bounded by two
    radii and an __arc__. Its area is proportional to the internal angle, as
    well as the length of the arc. This means that

    {.text-center} `(A_"Sector")/(A_"Circle") = "Arc"/"Circumference" = θ/(2π)`
  link:  /course/circles/tangets-chords-arcs#sectors
  image: circle-sector.svg

circle-segment:
  title: Circle segment
  text: A __segment__ of a circle is a part of its interior, bounded by a
    chord and the corresponding arc.

circumcircle:
  title: Circumcircle of a triangle
  text: The __circumcircle__ of a triangle is the circle that goes through all
    three of its vertices.
  image: circumcircle.svg
  link: /course/triangles/properties#circumcircle-1

coefficient:
  title: Coefficient
  text: __Coefficients__ are the numbers in front of the variables in a
    mathematical expression or equation. For example, in the expression
    `4x + 5y^2 - 3z`, the coefficient of `x` is 4, the coefficient of `y^2` is 5
    and the coefficient of `z` is –3.

collinear:
  title: Collinear points
  text: Three or more points are __collinear__ if they lie on the same line.

compass:
  title: Compass
  text: A __compass__ is a drawing tool used for creating circles or arcs. It
    consists of two arms – the needle on one end is placed in the center, while
    pencil on the other end traces out the curve.

complementary-angles:
  title: Complementary angles
  text: Two angles are __complementary__ if they add up to 90° (a right angle).

complete-graph:
  title: Complete graph
  text: In __complete graphs__, every vertex is connected to every other vertex.
    A complete graph with _n_ vertices has `(n×(n-1))/2` edges.
  link: /course/graph-theory/handshakes#handshakes-3

complex-numbers:
  title: Complex numbers
  text: |
    The __complex numbers__ are all numbers that are the sum or difference
    of a real and an imaginary number. They are often written as `a + bi`,
    where _a_ is the real part and _b_ is the imaginary part.

    Complex numbers can be represented on a two-dimensional plane, where the
    _x_-axis are the real numbers, and the _y_-axis are the imaginary numbers.

    The set of all complex numbers is often denoted using the symbol `CC`.

composite-number:
  title: Composite number
  text: A __composite number__ is an integer that is not prime. This means that
    it has factors other than 1 and itself.

concave:
  title: Concave polygon
  text: A __concave__ polygon has at least one internal angle greater than 180°.
    At least one of the diagonals lies _outside_ the polygon. A common way to
    identify a concave polygon is to look for a “caved-in” side of the polygon.
    _Concave_ is the opposite of _convex_ polygons.
  link: /course/polyhedra/polygons#concave

cone:
  title: Cone
  text: |
    A __cone__ is a three-dimensional solid that has a circular _base_ joined to
    a single point (called the _vertex_) by a curved side. You could also think
    of a cone as a “circular pyramid”.

    A __right cone__ is a cone with its vertex directly above the center of its
    base.
  link: /course/circles/spheres-cones-cylinders#cone
  image: cone.svg

cone-volume:
  title: Volume of a cone
  text: |
    The __volume of a cone__ is given by the equation

    {.text-center} `V = 1/3 π r^2 h`,

    where _r_ is the radius of the circular base, and _h_ is the height of the
    cone (the perpendicular distance from the base to the vertex).

congruent:
  title: Congruence
  text: In geometry, two figures are __congruent__ if are identical in size,
    shape and measure. This means we could move, flip or rotate them to exactly
    fit on top of each other.
  link: /course/euclidean-geometry/axioms#congruence

congruent-angles:
  title: Congruent angles
  text: Two angles are __congruent__ if they have the same size.

conic-section:
  title: Conic section
  text: |
    A __conic section__ is a curve that is created as the intersection of
    the surface of a cone with a flat plane. There are four different types of
    conic sections, which share many properties:

    * Circle
    * Ellipse
    * Parabola
    * Hyperbola
  link: /course/circles/conic-sections

convex:
  title: Convex polygon
  text: A __convex__ polygon contains no internal angles greater than 180°. All
    diagonals lie inside the polygon. This is the opposite of _concave_
    polygons.
  link: /course/polyhedra/polygons#concave

coordinate-system:
  title: Coordinate system
  text: A __coordinate system__ is a two-dimensional plane that contains two
    perpendicular axes. Every point on the plane can be defined using two
    numbers (coordinates), that specify its distance from the two axes.

coordinate-system-origin:
  title: Origin of a coordinate system
  text: The __origin__ of a coordinate system is the point with coordinates
    (0, 0). It is usually the point where the two axes cross.

corresponding-angles:
  title: Corresponding angles
  text: __Corresponding angles__ are two angles that are in the same position
    with respect to the transversal, but on different lines. They are always
    congruent.
  image: corresponding-angles.svg

cos:
  title: Cosine
  text: __Cosine__ is a trigonometric function written as `cos(θ)`. In a right
    angled triangle, it is the ratio of the adjacent side and the hypotenuse.
  # cos(x) is a periodic function with period 2π.
  link: /course/triangles/trigonometry#trig-functions

cpoct:
  title: CPOCT
  text: CPOCT stands for __corresponding parts of congruent triangles__. It
    means that if two triangles are congruent, then all of their corresponding
    components (angles, sides, midsegments, …) must also be congruent to each
    other.
  link: /course/triangles/congruence#cpoct

cross-section:
  title: Cross section
  text: A __cross section__ is the intersection of a three-dimensional solid
    with a plane.

cryptography:
  title: Cryptography
  text: __Cryptography__ is the area of mathematics that studies the enciphering
    and deciphering of secret messages.

cube:
  title: Cube
  text: A __cube__ (sometimes called __Hexahedron__) is a regular polyhedron
    in which every face is a square. It is one of the five _Platonic solids_,
    and it has 6 faces, 8 vertices and 12 edges.
  link: /course/polyhedra/platonic#platonic-overview

cube-volume:
  title: Volume of a Cube
  text: The __volume of a cube__ with side length _a_ is given by `V = a^3`.

cylinder:
  title: Cylinder
  text: A __cylinder__ is a three-dimensional solid consisting of two congruent,
    parallel, circular sides (the _bases_), joined by a curved surface. You
    could also think of a cylinder as a “circular prism”.
  link: /course/circles/spheres-cones-cylinders#cylinder-prism
  image: cylinder.svg

cylinder-volume:
  title: Volume of a Cylinder
  text: |
    The __volume of a cylinder__ is given by the equation

    {.text-center} `V = π r^2 h`,

    where _r_ is the radius of the circular base, and _h_ is the height of the
    cylinder (the perpendicular distance between the two bases).

degrees:
  title: Degrees
  text: __Degrees__ are a unit for measuring angles, denoted by the symbol °.
    One complete revolution is 360°, a right angle is 90°, and so on.

denominator:
  title: Denominator
  text: The __denominator__ is the bottom number in a fraction. For example, in
    `4/7`, the number 7 is the denominator.

dependent-events:
  title: Dependent Events
  text: |
    Two events are __dependent__ if the occurrence of one of them changes the
    propability that the other event occuring. For example, _A_ and _B_ could
    be dependent if P(*A*|*B*) ≠ P(*A*)`.

dilation:
  title: Dilation
  text: A __dilation__ is a transformation that resizes a geometric shape, by
    making it bigger or smaller.
  image: dilation.svg
  link: /course/transformations/dilations

directed-graph:
  title: Directed Graph
  text: In a __directed graph__, every edge has an “arrow”, i.e. a start vertex
    and an end vertex.
  link: /course/graph-theory/introduction#intro-1

discriminant:
  title: Discriminant
  text: |
    The __discriminant__ of a quadratic equation is the expression under the
    square root in the quadratic formula: `b^2 − 4ac`.

    It can be used to determine the number of solutions of the quadratic
    equation. If the discriminant is greater than 0, there are two solution. If it
    is equal to 0, there is just one solution. If it is less than 0, there are no
    (real) solutions.

dna:
  title: DNA
  text: __DNA__ (deoxyribonucleic acid) is a molecule that contains the genetic
    blueprint of all living organisms. Most DNAs consist of two strands forming
    a _double helix_. Genetic information is encoded in the order of four
    nucleic acids (A, G, C and T) which make up the DNA. _DNA sequencing_ is the
    process of extracting this information – an essential technique in biology,
    medicine, genetics and biotechnology.

dodecahedron:
  title: Dodecahedron
  text: The __dodecahedron__ is a Platonic solid and consists of 12 faces that
    are regular pentagons. It has 20 vertices and 30 edges.
  link: /course/polyhedra/platonic#platonic-overview

dot-annihilation:
  title: Annihilation
  text: If you have both a dot and an anti-dot in the same cell, they cancel
    out, or __annihilate__ each other. Think about `–1 + 1 = 0`.

dot-machine:
  title: Dot machine
  text: |
    A __dot machine__ consists of multiple cells containing dots. You can
    manipulate these dots according to specific rules.

    For example, in a `1←3` machine, 3 dots in one cell can be converted into 1
    dot in the next cell to the _left_. Similarly, 1 dot can be converted into
    3 dots in the next cell to the _right_. This is called an “explosion”.

ellipse:
  title: Ellipse
  text: |
    An __ellipse__ is a curved path that surrounds two focal points. Any point
    on the circumference of the ellipse has the same _sum of distances_ to the
    two foci.

    If the foci are very close, the ellipse looks almost like a circle. As they
    move further apart, the ellipse becomes more elongated.

    Ellipses are one type of _conic section_: an intersection of a cone with a
    plane.
  image: ellipse.svg
  link: /course/circles/conic-sections#ellipses

equation:
  title: Equation
  text: An __equation__ is a mathematical statement created by connecting two or
    more expressions with the __equals sign__ `=`. It indicates that all these
    expressions have the same value.

equilateral-triangle:
  title: Equilateral triangle
  text: An __equilateral triangle__ is a triangle in which all three sides have
    the same length.

euclidean-geometry:
  title: Euclidean geometry
  text: __Euclidean geometry__ is the kind of geometry envisioned by the
    mathematician _Euclid_, and includes the study of points, lines, polygons,
    circles as well as three-dimensional solids. It depends on just five
    _axiom_, the basic laws of geometry, which describe all the permitted
    operations and constructions.
  link: /course/euclidean-geometry/euclids-axioms#euclid

factor:
  title: Factor
  text: A number _a_ is a __factor__ (or __divisor__) of a number _b_, if you
    can divide _b_ by _a_ without remainder.
  link: /course/divisibility/factors-and-multiples

factorial:
  title: Factorial
  text: |
    The __factorial__ of a positive integer is the product of all integers
    up to and including itself. We write it using the exclamation point, for
    example

    {.text-center} `5! = 1×2×3×4×5`.

    By definition, `0! = 1.`

factorisation:
  title: Prime Factorisation
  text: The __prime factorisation__ of a number is a way to write it as a
    product of prime numbers. For example, the prime factorisation of 12
    is `12 = 2 × 2 × 3`, because both 2 and 3 are prime.
  link: /course/divisibility/primes

fermat-last:
  title: Fermat’s last theorem
  text: |
    __Fermat’s last theorem__ states that the equation `x^n + y^n = z^n` has no
    integer solutions for `n>2`. If `n=2`, we get _Pythagoras’ theorem_ which
    has many integer solutions, but for _n_ = 3, 4, 5, … there are none.

    In 1637, the mathematician Pierre de Fermat made a note in a textbook,
    claiming that he had a proof, but that it was too large to fit in the
    margin. For over 350 years, other mathematicians tried to find this proof,
    and Fermat’s last theorem was even in the _Guinness Book of World Records_
    as the “most difficult mathematical problem”.

    In 1994, after many years of work, Andrew Wiles finally managed to prove it.
    He later received the Abel Prize, one of the highest honours in mathematics.

fibonacci-numbers:
  title: Fibonacci numbers
  text: The sequence of __Fibonacci numbers__ starts with 1, 1. Every following
    term is the sum of the two previous terms, which means that the recursive
    formula is `x_n = x_(n-1) + x_(n-2)`.
  link: /course/sequences/fibonacci#fibonacci

figurate-numbers:
  title: Figurate numbers
  text: __Figurate numbers__ are numbers that can be represented using geometric
    shapes. Examples include square, triangle and tetrahedral numbers.
  link: /course/sequences/figurate#figurate

formula:
  title: Formula
  text: A __formula__ is a rule or equation that describes the relationship
    between two or more variables. An example is `A = πr^2`.

fractal:
  title: Fractal
  text: A __fractal__ is a geometric shape that has a _fractional dimension_.
    Many famous fractals are _self-similar_, which means that they consist of
    smaller copies of themselves. Fractals contain patterns at every level of
    magnification, and they can be created by repeating a procedure or iterating
    an equation infinitely many times.
  link: /course/fractals/introduction

fta:
  title: Fundamental theorem of arithemtic
  text: The __fundamental theorem of arithemtic__ (FTA) says that every integer
    has a unique prime factorisation.

function:
  title: Function
  text: A __function__ is a mathematical relation that converts an input `x`
    into exactly one output `f(x)`.

function-graph:
  title: Graphs of functions
  text: We can plot mathematical functions of the form `f(x)` in a coordinate
    system. The result is called the __graph__ of the function.

gcf:
  title: Greatest common factor
  keywords: gcf gcd divisor
  text: The __greatest common factor__ (GCF, sometimes called _greatest common
    divisor_) of two numbers _a_ and _b_ is the largest integer that is a factor
    of both _a_ and _b_.
  link: /course/divisibility/gcf

geometric-sequence:
  title: Geometric sequence
  text: A __geometric sequence__ (sometimes called __geometric progression__)
    is a sequence of numbers in which the ratio _r_ between consecutive terms
    is always constant.
  link: /course/sequences/arithmetic-geometric#arithmetic-geometric-1

geometric-series:
  title: Geometric series
  text: |
    A __geometric series__ is the infinity sum of the terms in a geometric
    sequence, where consecutive terms have a constant ratio _r_. For example,

    {.text-center} `1 + 1/2 + 1/4 + 1/8 + …`

    is a geometric series with constant ratio `1/2`.

glide-reflection:
  title: Glide reflections
  text: A __glide reflection__ is a special kind of transformation. It is a
    combination of a _reflection_ and a _translation_ in the same direction as
    the axis of reflection.
  link: /course/transformations/symmetry-groups#footsteps

golden-ratio:
  title: Golden ratio
  text: |
    The __golden ratio__ is a specific irrational number with value
    `φ = 1.61803398875…`. It can be approximated by dividing two consecutive
    Fibonacci numbers.

    The golden ratio is often seen as particularly aesthetically pleasing in art
    and architecture, and it appears in the spirals of many plants.
  link: /course/sequences/fibonacci#golden-ratio-1

graph:
  title: Graph
  text: A __graph__ is a collection of vertices connected by edges.
  link: /course/graph-theory/introduction

graph-cycle:
  title: Cycle
  text: __Cycles__ are graphs that consist of a single loop of vertices.
  link: /course/graph-theory/introduction#intro-4

graph-degree:
  title: Degree
  text: The __degree__ of a vertex is the number of edges that meet at that vertex.
  link: /course/graph-theory/introduction#intro-3

graph-edge:
  title: Edge
  text: __Edges__ are the lines that connect vertices (points) in a graph.
  link: /course/graph-theory/introduction

graph-order:
  title: Order
  text: The __order__ of a graph is the number of vertices in it.
  link: /course/graph-theory/introduction#intro-3

graph-vertex:
  title: Vertex
  text: A __vertex__ is a point or node that is part of a graph.
  link: /course/graph-theory/introduction

gravity:
  title: Gravity
  text: |
    __Gravity__ is one of the four fundamental forces of nature, and it pulls
    any two masses in the universe towards this other. Isaac Newton discovered
    that the force between two masses `m_1` and `m_2` is

    {.text-center} `F = (G m_1 m_2) / r^2`,

    where _G_ is the gravitational constant and _r_ is the distance between the
    masses.

group:
  title: Group
  text: |
    A __group__ is a collection of “things” (like numbers or symmetries) that
    follow three different rules:

    1. You can add/combine two of the things, to get another one that is also
       in the group.
    2. The things are _associative_, which means that `a+(b+c) + (a+b)+c`.
    3. There is an _identity_, and every “thing” has an _inverse_ which, when
       added, gives the identity.
  link: /course/transformations/symmetry-groups#groups-1

hailstone-sequence:
  title: Hailstone Sequence
  text: |
    __Hailstone sequences__ can be generated by picking any integer as starting
    point, and then following these rules:

    * If `x_n` is even, `x_(n+1) = 1/2 x_n`.
    * If `x_n` is odd, `x_(n+1) = 3 x_n + 1`.
  link: /course/sequences/special#hailstone

heptagon:
  title: Heptagon
  text: A __heptagon__ is a polygon with seven sides.

hexagon:
  title: Hexagon
  text: A __hexagon__ is a polygon with six sides.

hyperbola:
  title: Hyperbola
  text: A __hyperbola__ is the shape of the graph of the function `y = 1/x`.
    It consists of two disjoint parts, both of which approach _asymptotes_. It
    is also a _conic section_.
  image: hyperbola.svg

hypotenuse:
  title: Hypotenuse
  text: The __hypotenuse__ of a right-angled triangle is its longest side, which
    lies opposite the right angle.
  image: right-triangle.svg

icosahedron:
  title: Icosahedron
  text: The __icosahedron__ is a Platonic solid and consists of 20 faces that
    are all equilateral triangles. It has 12 vertices and 30 edges.
  link: /course/polyhedra/platonic#platonic-overview

imaginary:
  title: Imaginary Numbers
  text: |
    __Imaginary numbers__ are generated by taking square roots of negative
    numbers. Despite their name, they are of great importance in mathematics,
    science and engineering.

    The __imaginary unit__ is written as `i = sqrt(−1)`, and other imaginary
    numbers can be written as its multiples. For example, `sqrt(-5) = 5i`.

independent-events:
  title: Independent Events
  text: |
    Two events are __independent__ if the occurrence of any one of them _does
    not_ affect the propability that the other event occuring.

    More formally, we can say that _A_ and _B_ are independent if and only if
    P(*A*|*B*) = P(*A*).

infinity:
  title: "Infinity"
  text: __Infinity__ is a quantity without limit or end. In mathematics, it is
    represented by the symbol `∞`.

information:
  title: Information Theory
  text: __Information theory__ is the study of quantification, storage and
    communication of data and information. It is used in logic, cryptography
    and computer science.

integer:
  title: Integers
  text: |
    The __integers__ are the positive and negative whole numbers including
    zero: …, –3, –2, –1, 0, 1, 2, 3, …. They are often denoted using the
    symbol `ZZ`.

internal-angle:
  title: Internal angles
  text: The __internal angles__ of a polygon are the angles on the inside, at
    every vertex.
  image: internal-angle.svg

irrational-numbers:
  title: Irrational numbers
  text: __Irrational numbers__ are numbers that cannot be expressed as fractions
    of integers (_rational numbers_). For example, 0.333333… = `1/3` is
    _rational_ but `π`, `sqrt(2)` and _e_ are all _irrational_. The decimal form
    of an irrational number does not stop or repeat.

irregular-polygon:
  title: Irregular polygon
  text: An __irregular polygon__ is one that is _not regular_. This means that
    either the sides or the angles don’t all have the same size.

isosceles-triangle:
  title: Isosceles triangle
  text: In an __isosceles triangle__, two sides have the same length.

iss:
  title: International Space Station
  text: The __International Space Station__ (ISS) was launched in 1998 and
    orbits Earth at an altitude of approximately 400 km. It is the largest
    human-made body in low Earth orbit, and has been inhabited continuously
    since launch. It can be seen with the naked eye from Earth.

julia-set:
  title: Julia set
  text: Given a function `f`, like `§f(x) = x^2`, the corresponding __Julia
    set__ `§K(f)` is a subset of all points in the complex plane, where the
    sequence formed by repeatedly applying `f` does not diverge. In many cases,
    the Julia set is a _fractal_, and it is closely related to the _Mandelbrot
    set_.
  link: /course/fractals/mandelbrot#julia
  image: julia-set.png

kite:
  title: Kite
  text: A __kite__ is a quadrilateral in which two pairs of adjacent sides have
    the same length.
  link: /course/polyhedra/quadrilaterals#kites

koch-snowflake:
  title: Koch snowflake
  text: The __Koch snowflake__ is a self-similar fractal. It consists of
    an eqilateral triangle, with smaller equilateral triangles recursively
    added to each of its sides.
  link: /course/fractals/introduction#koch
  image: koch-snowflake.svg

laws-of-nature:
  title: Laws of nature
  text: The __laws of nature__ are the name given collectively to the physical
    rules (usually expressed as mathematical equations) that try to explain
    everything we observe in the universe.

lcm:
  title: Lowest common multiple
  keywords: lcm least
  text: The __lowest common multiple__ (LCM, sometimes called _least common
    multiple_) of two numbers _a_ and _b_ is the smallest integer that is a
    multiple of both _a_ and _b_.
  link: /course/divisibility/lcm

line:
  title: Line
  text: A __line__ is a set of infinitely many points that extend forever in
    both directions. Lines are always straight and have no _width_.
  link: /course/euclidean-geometry/axioms#lines

line-segment:
  title: Line segment
  text: A __line segment__ is the part of a line that lies between two points,
    without extending to infinity. We can label line segments from point _A_ to
    point _B_ as `bar(AB)`.
  link: /course/euclidean-geometry/axioms#segments

line-slope:
  title: Slope of a line
  text: The __slope__ of a line measures its “steepness”, and is usually denoted
    by the letter _m_. It is the change in _y_ for a unit change in _x_ along
    the line.

linear-equation:
  title: Linear equation
  text: A __linear equation__ is of the form `ax + b = 0`, where _x_ is a
    variable, and _a_ and _b_ are numbers. When graphed in a coordinate system,
    the values of `ax+b` form a straight line.

linear-function:
  title: Linear function
  text: A __linear function__ is a function whose graph is a straight line. It
    can be defined as `f(x) = mx + c`, where _m_ is the slope of the line, and
    _c_ is its _y_-axis intercept.

mandelbrot-set:
  title: Mandelbrot set
  text: The __Mandelbrot set__ is the set of complex numbers `CC` for which the
    recursive sequence `§z_n = z_(n-1)^2 + c` (with `§z_0 = 0`) does not
    diverge. It is a _fractal_.
  link: /course/fractals/mandelbrot
  image: mandelbrot-set.png

matrix:
  title: Matrix
  text: A __matrix__ is a rectangular array of numbers arranged in rows and
    columns.

median:
  title: Median
  text: The __median__ of a set of numbers is the value for which half the
    numbers are larger and half the numbers are smaller. If there are two
    “middle numbers”, it is the average of these numbers.

midpoint:
  title: Midpoint
  text: The __midpoint__ of a line segment is the point on the line segment that
    splits the segment in the middle, into two congruent parts. The __midpoint
    formula__ says that for endpoints `(x_1, y_1)` and `(x_2,y_2)`, the midpoint
    is `((x_1 + x_2)/2, (y_1 + y_2)/2)`.

millennium-prize:
  title: Millennium prize problems
  text: |
    The seven __Millennium prize problems__ are some of the most difficult open
    problems in Mathematics. They were listed in 2000 by the _Clay Mathematics
    Institute_, and each hold a $1m reward:

    * P vs NP
    * The Hodge conjecture
    * The Poincaré conjecture
    * The Riemann hypothesis
    * Yang-Mills existence and mass gap
    * Navier-Stokes existence and smoothness
    * The Birch and Swinnerton-Dyer conjecture

    So far, just one of the problems, the _Poincaré conjecture_, has been
    solved. However the mathematician who solved it, Grigori Perelman, declined
    the award.

mode:
  title: Mode
  text: The __mode__ of a set of numbers is the number that occurs most often.
    For example, the mode of [3, 4, 4, 4, 5, 5, 6] is 5.

molecule:
  title: Molecule
  text: |
    A __molecule__ consists of two or more atoms which are held together by
    chemical bonds. It has no electric charge, unlike __Ions__.

    Examples of molecules include `O_2`, which consists of two connected Oxygen
    atoms, and `H_2 O`, which consists of two Hydrogen atoms and one Oxygen
    atom.

morse-code:
  title: Morse code
  text: |
    __Morse code__ is a way to represent letters and numbers using short and
    long signals (called dots and dashes). It is named after _Samuel Morse_ and
    was initially used to communicate over long distances using telegraphs.

    For example, the letter “L” would be represented using the sequence
    _{x-morse(char="L")}_ of short and long signals.

multiple:
  title: Multiple
  text: A number _a_ is a __multiple__ of a number _b_, if _b_ is a _factor_
    of _a_.
  link: /course/divisibility/factors-and-multiples

natural-numbers:
  title: Natural numbers
  text: |
    The __natural numbers__ are the positive whole numbers starting at 1:
    1, 2, 3, 4, … They are often denoted using the symbol `NN`.

net:
  title: Nets of polyhedra
  text: The __net__ of a polyhedron is what you get when you “unfold” its
    polygonal faces onto a flat surface.

neutron:
  title: Neutron
  text: A __neutron__ is one of the particles that make up the core of an atom.
    It has no charge, and has approximately the same mass as a proton.

np:
  title: NP hard problems
  text: _Computational complexity theory_ is about determining how “difficult”
    problems are to be solved by a computer. __NP hard__ (non-deterministic
    polynomial-time hard) is the class of the most difficult problems.

numerator:
  title: Numerator
  text: The __numerator__ is the top number in a fraction. For example, in
    `4/7`, the number 4 is the numerator.

obtuse-angle:
  title: Obtuse angle
  text: An __obtuse angle__ is an angle of size greater than 90° but less than
    180°.

obtuse-triangle:
  title: Obtuse triangle
  text: In an __obtuse triangle__, one interior angle is larger than 90°.
  link: /course/triangles/properties#classification

octagon:
  title: Octagon
  text: An __octagon__ is a polygon with eight sides.

octahedron:
  title: Octahedron
  text: The __octahedron__ is a Platonic solid and consists of 8 faces that are
    equilateral triangles. It has 6 vertices and 12 edges.
  link: /course/polyhedra/platonic#platonic-overview

order-of-symmetry:
  title: Order of symmetry
  text: If a shape has rotational symmetry, the __order of symmetry__ is the
    number of orientations in which the shape looks the same. (Or, it is the
    number of times you can rotate the shape, before we get back to the start.)
  link: /course/transformations/symmetry#rotational-symmetry

origin:
  title: Origin
  text:  The __origin__ of a coordinate system is the point (0, 0), where the
    _x_-axis and the _y_-axis intersect.

origin-number-line:
  title: Origin of a number line
  text: The __origin__ of a number line is the point 0.

palindrome:
  title: Palindrome
  text: A __palindrome__ is a word or number that reads the same from back to
    front as it does from front to back. For example, 25752 and “ANNA” are both
    palindromes.
  link: /course/transformations/symmetry#palindromes

parabola:
  title: Parabola
  text: A __parabola__ is the shape of the graph of a quadratic function like
    `y = x^2`. It is symmetric, U-shaped and can point either upwards or
    downwards. It is also a _conic section_.
  image: parabola.svg

parabola-conic:
  title: Parabola
  text: A __parabola__ is the set of all points in a plane, which have the same
    distance from a fixed line, called the __directrix__, and a fixed point,
    called the __focus__.

parabola-focus:
  title: Focus of a parabola
  text: The __focus__ of a parabola is a fixed point in its interior. For a
    parabolic mirror, all parallel, incoming light rays intersect in the focus
    after being reflected.

parabola-vertex:
  title: Vertex of a parabola
  text: The __vertex__ of a parabola is the point at which it changes direction.
    It is either the maximum or the minimum of the corresponding quadratic
    function, and it lies on the axis of symmetry of the parabola.
  # The vertex is halfway between the directrix and the focus of the parabola.

parallel:
  title: Parallel lines
  text: Two or more lines are __parallel__ if they never intersect. They have
    the same slope and the distance between them is always constant.
  image: parallel.svg
  link: /course/euclidean-geometry/axioms#parallel

parallelogram:
  title: Parallelogram
  text: A __parallelogram__ is a quadrilateral in which both pairs of
    opposite sides are parallel.
  link: /course/polyhedra/quadrilaterals#parallelograms

pascals-triangle:
  title: Pascal’s triangle
  text: __Pascal’s triangle__ is a number pyramid in which every cell is the sum
    of the two cells directly above. It contains all binomial coefficients, as
    well as many other number sequences and patterns.
  link: /course/sequences/pascals-triangle#pascal-triangle

penrose:
  title: Penrose tiling
  text: A __Penrose tiling__ is a _non-periodic_, _self-similar_ tessellation.
    It only consists of a few different shapes, but never repeats itself.
  link: /course/polyhedra/tessellations#penrose

pentagon:
  title: Pentagon
  text: A __pentagon__ is a polygon with five sides.

percent:
  title: Percent
  text: A __percent__ is a ratio whose denominator is 100. For example, we
    write 80% to mean `80/100 = 0.8`.

perfect-numbers:
  title: Perfect Numbers
  text: A __perfect number__ is a number that is equal to the sum of its
    divisors (excluding itself). For example, `28 = 1 + 2 + 4 + 7 + 14` is
    a perfect number.
  link: /course/sequences/special#perfect-1

perpendicular:
  title: Perpendicular lines
  text: Two lines are __perpendicular__ (sometimes called _normal_ or
    _orthogonal_) if they intersect at a right angle.
  # Perpendicular lines have slopes that are negative reciprocals.
  image: perpendicular.svg
  link: /course/euclidean-geometry/axioms#perpendicular

perpendicular-bisector:
  title: Perpendicular bisector
  text: The __perpendicular bisector__ of a line segment passes through its
    midpoint and intersects it at an angle of 90°.
  image: perpendicular-bisector.svg

pi:
  title: Pi
  text: __Pi__, often written as the Greek letter _π_, is the ratio of the
    circumference and the diameter of a circle. It is a transcendental number,
    and its value is approximately 3.14159265…
  link: /course/circles/introduction#pi-definition

platonic-solid:
  title: Platonic solid
  text: |
    A __Platonic solid__ is a polyhedron where every face is a regular
    polygon with the same number of edges, and where the same number of faces
    meet at every vertex. There are only five different Platonic solids: the
    Tetrahedron, Cube, Octahedron, Dodecahedron and Icosahedron.
  link: /course/polyhedra/platonic

point:
  title: Point
  text: A __point__ is a specific location in space. Points describe a position,
    but have no size or shape themselves.
  link: /course/euclidean-geometry/axioms#points

polygon:
  title: Polygon
  text: A __polygon__ is geometric shape that is made up of straight line
    segments. Polygons cannot contain any curved sides, or holes. For example, a
    square is a polygon but a circle is not.
  image: polygon.svg
  link: /course/polyhedra/polygons#polygons

polygon-diagonal:
  title: Diagonal
  text: A __diagonal__ of a polygon is a line segment that connects two vertices
    that are not next to each other.

polygon-edge:
  title: Edge of a polygon
  text: The __sides__ or __edges__ of a polygon are the line segments that form
    its outline. For example, a triangle has three sides.

polygon-vertex:
  title: Vertex of a polygon
  text: The __vertices__ of a polygon are the points where its adjacent sides
    meet (its “corners”).

polyhedron:
  title: Polyhedron
  text: A __polyhedron__ (the plural is _polyhedra_) is a three-dimensional
    solid with no curved surfaces or edges. All faces of a polyhedron are
    polygons. For example, a cube and a pyramid are polyhedra, but a sphere is
    not.
  link: /course/polyhedra/polyhedra

polyhedron-dual:
  title: Dual of a polyhedron
  text: TODO
  link: /course/polyhedra/platonic#platonic-dual

polyhedron-edge:
  title: Edge of a polyhedron
  text: The __edges__ of a polyhedron are the line segments where two of its
    faces are connected.
  link: /course/polyhedra/polyhedra

polyhedron-face:
  title: Face of a polyhedron
  text: The __faces__ of a polyhedron are the polygons which make up its
    surface.
  link: /course/polyhedra/polyhedra

polyhedron-vertex:
  title: Vertex of a polyhedron
  text: The “corners” of a polyhedron are called its __vertices__.
  link: /course/polyhedra/polyhedra

polynomial:
  title: Polynomial
  text: A __polynomial__ is an algebraic expression that consists of constants
    and multiples of variables raised to integer powers. For example,
    `5x^3 - 2y^2 + x + 4` is a polynomial. The most general form of a polynomial
    with just one variable is `a_n x^n + a_(n–1) x^(n–1) + … + a_2 x^2 + a_1 x
    + a_0`, where `a_n`, `a_(n-1)`, …, `a_0` are all specific constants.

polynomial-degree:
  title: Degree
  text: The __degree__ of a term or polynomial is the highest power of any
    variables in it. For example, the degree of `5x^3 + 2y^2 - 4z` is 3.

powers:
  title: Exponentiation
  text: __Exponentiation__ (or __powers__) is the mathematical operation where a
    number (the _base_) is multiplied by itself a specified number of times (the
    _exponent_). This is usually written as a superscript `a^x`, where _a_ is
    the base and _x_ is the exponent. For example, `4^3=4×4×4`.

prime:
  title: Prime number
  text: A __prime number__ is a positive integer that has no factors other than
    1 and itself. The first prime numbers are 2, 3, 5, 7, 11, 13, …
  link: /course/divisibility/primes

prime-factor:
  title: Prime factor
  text: A __prime factor__ of a number is simply a factor which is prime.
  link: /course/divisibility/primes

prime-factorisation:
  title: Prime factorisation
  text: The __prime factorisation__ of a number is a way to express it as the
    product of prime numbers. For example, the prime factorisation of 12 is
    `2 × 2 × 3`.

prism:
  title: Prism
  text: A __prism__ is a three-dimensional solid that has two congruent faces
    that are polygons (called the _bases_), whose corresponding vertices are
    joined by parallel segments. The remaining faces of a prism are all
    rectangles or parallelograms.
  image: prism.svg

probability:
  title: Probability
  text: A __probability__ is number between 0 and 1 that indicates the
    likelihood of the occurrence of certain event. The probability of an event
    _A_ is written as `P(A)`.

probability-tree:
  title: Probability tree
  text: A __probability tree__ is a tree diagram representing the combined
    probability of multiple sequential events.

proof:
  title: Proof
  text: A __proof__ is a logical argument that shows beyond any doubt that a
    certain statement is true.

protein:
  title: Protein
  text: |
    A __protein__ is a large _macromolecule_ that can perform many different
    functions within living organisms: from digestion to communicating between
    cells or replicating DNA. Proteins consist of one or more chains of _amino
    acid residues_.

proton:
  title: Proton
  text: A __proton__ is one of the particles that make up the core of an atom.
    It has a charge of +1. The number of protons in an atom is called its
    “atomic number”, and it determines what kind of element it is.

pyramid:
  title: Pyramid
  text: |
    A __pyramid__ is a polyhedron that has a polygon as base, and triangular
    faces around the outside, that taper to a vertex.

    In a __right regular pyramid__, the base is a _regular polygon_ and the
    vertex is directly above the center of the base.
  image: pyramid.svg

protractor:
  title: Protractor
  text: A __protractor__ is a tool used to measure an angle in degrees.

pythagoras-theorem:
  title: Pythagoras’ theorem
  text: __Pythagoras’ theorem__ states that in every right-angled triangle,
    `a^2 + b^2 = c^2`, where _c_ is the length of the hypotenuse and _a_ and _b_
    are the lengths of the other two sides.
  link: /course/triangles/pythagoras

pythagorean-triple:
  title: Pythagorean triple
  text: A __Pythagorean triple__ is a set of three whole numbers _a_, _b_ and
    _c_ that satisfy Pythagoras’ theorem `a^2 + b^2 = c^2`.
  link: /course/triangles/pythagoras#pythagorean-triples

quadratic:
  title: Quadratic
  text: A __quadratic__ is a polynomial of degree 2. For example, `x^2 - 2x + 3`
    is a quadratic.

quadratic-equation:
  title: Quadratic equation
  text: A __quadratic equation__ is an equation that contains a single variable
    of degree 2. It is often written as `ax^2 + bx + c = 0`, where _x_ is a
    variable, _a_, _b_ and _c_ are numbers, and `a != 0`.

quadratic-formula:
  title: Quadratic formula
  text: |
    The __quadratic formula__ is a way to determine to the roots of a quadratic
    equation. The equation `ax^2 + bx + c = 0` has roots

    {.text-center} `x = (-b +- sqrt(b^2 - 4ac))/(2a)`.

quadratic-function:
  title: Quadratic function
  text: A __quadratic function__ is a function of the form `f(x) = ax^2+bx+c`,
    where _a_, _b_, and _c_ are numbers, and `a != 0`. The graph of a quadratic
    function is a U-shaped curve called a __parabola__.

quadratic-function-vertex-form:
  title: Vertex form of a quadratic function
  text: The __vertex form__ or __standard form__ of a quadratic function is
    `f(x) = a(x − h)^2 + k`. The point `(h, k)` is the __vertex__ of the
    corresponding parabola.

quadrilateral:
  title: Quadrilateral
  text: A __quadrilateral__ is a polygon with four sides.
  link: /course/polyhedra/quadrilaterals

quantum:
  title: Quantum mechanics
  text: __Quantum mechanics__ is a branch of Physics that explains the strange
    behaviour of fundamental particles.

radians:
  title: Radians
  text: __Radians__ are a unit for measuring the size of angles. One complete
    revolution (360°) is `2π` radians – the length of the circumference of a
    unit circle.
  link: /course/circles/radians#radians

radioactive:
  title: Radioactive decay
  text: __Radioactive decay__ is a physical process by which unstable atoms
    break apart and release energy.

rational-numbers:
  title: Rational numbers
  text: __Rational numbers__ are numbers that can be expressed as a fraction
    `p/q` of two integers. Their decimal expansion either stops or repeats
    eventually. Examples include `1/2`, `-5/7`, 12.71 and 9. Rational numbers
    are often denoted using the symbol `QQ`.

ray:
  title: Ray
  text: A __ray__ is the part of a line that starts at a point and extends
    infinitely in one direction. We can label rays starting at `A` as `vec(AB)`.
  link: /course/euclidean-geometry/axioms#rays

real-numbers:
  title: Real numbers
  text: The __real numbers__ are all numbers that appear on the number line,
    including positive and negative numbers, rational numbers (fractions),
    square roots, cube roots, decimals, _π_, _e_, and many more. They are often
    denoted using the symbol `RR`.

rectangle:
  title: Rectangle
  text: A __rectangle__ is a quadrilateral in which all four angles are 90°.
  link: /course/polyhedra/quadrilaterals#quadrilaterals-1

reflection:
  title: Reflection
  text: A __reflection__ is a transformation that “flips” or “mirrors” a shape
    across a line.
  link: /course/transformations/rigid#reflections

reflectional-symmetry:
  title: Reflectional symmetry
  text: A shape has __reflectional symmetry__ if it looks the same after being
    reflected.
  image: reflectional-symmetry.svg
  link: /course/transformations/symmetry#reflectional-symmetry

regular-polygon:
  title: Regular polygon
  text: A __regular polygon__ is a polygon in which all sides have the same
    length and all interior angles have the same size.
  image: regular-polygon.svg
  link: /course/polyhedra/polygons#regular-polygons

rhombus:
  title: Rhombus
  text: A __rhombus__ (the plural is _rhombuses_ or _rhombi_) is a quadrilateral
    in which all sides have the same length.
  link: /course/polyhedra/quadrilaterals#quadrilaterals-1

right-angle:
  title: Right angle
  text: A __right angle__ is an angle of size 90°.

right-triangle:
  title: Right-angled triangle
  text: In a __right-angled triangle__, one interior angle is exactly 90°.
  image: right-triangle.svg
  link: /course/triangles/properties#classification

rigid-transformation:
  title: Rigid transformation
  text: A __rigid transformation__ (or __isometry__) is a transformation that
    doesn't change the size or shape of a geometric figure.
  link: /course/transformations/rigid

roman-numerals:
  title: Roman numerals
  text: |
    The __Roman numeral system__ was developed in ancient Rome and used in
    Europe until the 14th century. It allowed you to write any integer by
    combining seven different letters:

    * I = 1
    * V = 5
    * X = 10
    * L = 50
    * C = 100
    * D = 500
    * M = 1000

rotation:
  title: Rotation
  text: A __rotation__ is a transformation that “turns” a shape by a certain
    angle around a fixed point.
  link: /course/transformations/rigid#rotations

rotational-symmetry:
  title: Rotational symmetry
  text: A shape has __rotational symmetry__ if it looks the same after being
    rotated (by less than 360°).
  image: rotational-symmetry.svg
  link: /course/transformations/symmetry#rotational-symmetry

roulette:
  title: Roulette
  text: __Roulette__ is a casino game in which you bet on where a spinning ball
    is going to land. It contains 36 numbers as well as one or two 0s.

scale-factor:
  title: Scale factor
  text: |
    The __scale factor__ of two similar geometric figures is the ratio of
    any two corresponding lengths.

    A scale factor less than 1 indicates the shape is shrinked, and a scale
    factor greater than 1 indicates the shape is enlarged.
  link: /course/transformations/dilations#dilations-1

scalene-triangle:
  title: Scalene triangle
  text: In a __scalene triangle__, all three sides have different lengths.

scientific-notation:
  title: Scientific notation
  text: |
    __Scientific notation__ is a standardised method for writing very large or
    small numbers. It is of the form `a × 10^n`, where _n_ is an integer and
    `1 ≤ a < 10`.

    For example, the number 4600 could be written as `4.6 × 10^3`.

set:
  title: Set
  text: A __set__ is a collection of things or objects (called elements). Every
    element can only appear one in a set. We write sets using {}s, for example,
    a set containing the numbers 2, 3 and 4 would be written as {2, 3, 4}.

sequence:
  title: Sequence
  text: A __sequence__ is an ordered list of numbers (or other elements like
    geometric objects), that often follow a specific pattern or function.
    Sequences can be both finite and infinite.
  link: /course/sequences/introduction#simple-patterns

sequence-convergence:
  title: Convergence
  text: A sequence __converges__ if, over time, its terms get closer and closer
    to a specific __limit__.

sequence-divergence:
  title: Divergence
  text: A sequence __diverges__ if, over time, its terms get bigger and bigger,
    towards infinity (or negative infinity).

sequence-explicit:
  title: Explicit formula
  text: An __explicit formula__ for a sequence expresses the value of the *n*th
    term `x_n` as a function of _n_.
  link: /course/sequences/introduction#explicit

sequence-recursive:
  title: Recursie formula
  text: A __recursive formula__ for a sequence expresses the value of every
    term `x_n` as a function of its previous terms.
  link: /course/sequences/introduction#recursive-1

sequence-term:
  title: Terms of a sequence
  text: The __terms__ of a sequence are all its individual numbers or elements.
  link: /course/sequences/introduction#simple-patterns

sierpinski-triangle:
  title: Sierpinski triangle
  text: The __Sierpinski triangle__ is a self-similar fractal. It consists of
    an equilateral triangle, with smaller equilateral triangles recursively
    removed from its remaining area.
  link: /course/fractals/sierpinski
  image: sierpinski-triangle.svg

sieve-eratosthenes:
  title: Sieve of Eratosthenes
  text: The __sieve of Eratosthenes__ is a procedure for finding prime numbers,
    by repeatedly eliminating numbers that are _not_ prime.
  link: /course/divisibility/primes#eratosthenes

similar:
  title: Similar
  text: Two geometric shapes are __similar__ if they have the same shape but a
    different size. We can move, rotate, reflect and resize one shape to match
    up with the other one. Their corresponding angles are equal and their
    corresponding sides are in the same ratio.

sin:
  title: Sine
  text: __Sine__ is a trigonometric function written as `sin(θ)`. In a right
    angled triangle, it is the ratio of the opposite side and the hypotenuse.
  # `sin(x) is a periodic function with period `2π`.
  link: /course/triangles/trigonometry#trig-functions

sphere:
  title: Sphere
  text: A __sphere__ is a three-dimensional solid consisting of all points
    that have the same distance from a given _center_. This distance is called
    the _radius_ of the sphere.
  link: /course/circles/spheres-cones-cylinders#sphere

sphere-radius:
  title: Radius of a sphere
  text: The __radius__ of a sphere is the distance (or a line segment) between
    its center and any point on its surface.

square:
  title: Square
  text: |
    A __square__ is a regular quadrilateral: all sides have the same
    length, and all angles have the same size (90°).
  link: /course/polyhedra/quadrilaterals

square-area:
  title: Area of a square
  text: The __area__ of a square with side length _s_ is `A = s^2`.

square-matrix:
  title: Square matrix
  text: A __square matrix__ is a matrix that has the same number of rows and
    columns.

square-numbers:
  title: Square numbers
  text: A __square number__ is a number that can be expressed as the square of
    another integer. The first square numbers are 1, 4, 9, 16, 25, …
  link: /course/sequences/introduction#squares

subdivision:
  title: Subdivisions
  text: To create a __subdivision__ of a graph you add additional vertices along
    its edges.

subgraph:
  title: Subgraph
  text: A graph is a __subgraph__ of another graph, if it is formed by a subset
    of the larger graphs edges and vertices.
  link: /course/graph-theory/introduction#intro-2

supplementary-angles:
  title: Supplementary angles
  text: Two angles are __supplementary__ if they add up to 180° (a semi-circle).

symmetry:
  title: Symmetry
  text: A figure or shape has __symmetry__, if it looks the same after being
    transformed in some way (e.g. reflection or rotation).
  link: /course/transformations/symmetry#symmetry

symmetry-group:
  title: Symmetry group
  text: The __symmetry group__ of a geometric object is the collection of all of
    its _symmetries_ (as well as the _identity_).
  link: /course/transformations/symmetry-groups#groups-1

tan:
  title: Tangent
  text: |
    __Tangent__ is a trigonometric function written as `tan(θ)`. It is defined
    as the ratio of _sine_ and _cosine_:

    {.text-center} `tan(θ) = sin(θ) / cos(θ)`.

    In a right angled triangle, `tan(θ)` is the ratio of the opposite side and
    the adjacent side of an angle `θ`.
  link: /course/triangles/trigonometry#trig-functions

tangent:
  title: Tangent line
  text: A __tangent line__ is a line that touches a curve or circle at a single
    point, without intersecting it. This point is sometimes called the __point
    of tangency__.
  # Formally, it is a line through a point of a differentiable curve, which has
  # the same slop as the slope of the curve at that point.
  # A line tangent to a circle is perpendicular to the radius at that point.

telegraph:
  title: Telegraph
  text: |
    A __telegraph__ is system for transmitting messages across long distances,
    by sending electric signals along wires.

term:
  title: Term (Algebra)
  text: |
    The __terms__ are the parts of an algebraic expression or equation that
    are separated by + or – signs. They can be products or fractions or
    one or more numbers, variables or functions.

    For example, in the expression `2x^2 - 3ab + 4`, the three terms are `2x^2`,
    `3ab` and 4.

tessellation:
  title: Tessellation
  text: A __tessellation__ is a geometric pattern that covers a surface without
    gaps or overlaps.
  link: /course/polyhedra/tessellations

tetrahedral-numbers:
  title: Tetrahedral numbers
  text: A __tetrahedral number__ is a number that is created by stacking
    multiple spheres into a _tetrahedron_. The first tetrahedral numbers are
    1, 4, 10, 20, 35, …
  link: /course/sequences/figurate#tetrahedral

tetrahedron:
  title: Tetrahedron
  text: The __tetrahedron__ is a Platonic solid and consists of four faces that
    are equilateral triangles. It has four vertices and six edges.
  link: /course/polyhedra/platonic#platonic-overview

theorem:
  title: Theorem
  text: A __theorem__ is a particularly important result or observation in
    mathematics. It has been proven to be always true, using axioms, the rules
    logic, and previous theorems that were already known to be true.

transformation:
  title: Transformation
  text: A __transformation__ converts one geometric shape into another. There
    are many different types of transformations, like _reflections_ or
    _dilations_.
  link: /course/transformations/rigid#transformations

transformation-image:
  title: Image of a transformation
  text: After transforming a geometric shape, the result is called its
    __image__. It is often denoted by adding a ’ to the end of its label.
  link: /course/transformations/rigid#transformations

translation:
  title: Translation
  text: A __translation__ is a transformation that moves a figure in a specific
    direction, without changing its angle or shape.
  image: translation.svg
  link: /course/transformations/rigid#translations

translational-symmetry:
  title: Translational symmetry
  text: A repeated pattern (like a wallpaper) has __translational symmetry__ if
    it looks the same after being translated by a specific distance.
  link: /course/transformations/symmetry-groups#symmetry-groups-1

transversal:
  title: Traversal
  text: A __transversal__ is a line that intersects two other lines.

trapezium:
  title: Trapezium
  text: A __trapezium__ (sometimes called __trapezoid__) is a quadrilateral in
    which two opposite sides are parallel. These are called the _bases_ of the
    trapezium, and the other two sides are called the _legs_.
  link: /course/polyhedra/quadrilaterals#quadrilaterals-2

triangle:
  title: Triangle
  text: A __triangle__ is a geometric shape that has three straight sides and
    three internal angles.

triangle-aa:
  title: AA condition for triangles
  text: Two triangles are __similar__ if two of their angles have the same size.
    This is called the __AA similarity condition__ for triangles.

triangle-altitude:
  title: Altitudes of triangles
  text: An __altitude__ (or __height__) of a triangle is a line perpendicular to
    one of the sides, that goes through the opposite vertex. Every triangle has
    three altitudes.
  image: triangle-altitude.svg
  link: /course/triangles/properties#altitudes

triangle-legs:
  title: Legs of a triangle
  text: The two __legs__ of a right-angled triangle are the two shorter sides
    (not the _hypotenuse_). They are next to the right angle.

triangle-inequality:
  title: Triangle Inequality
  text: The __triangle inequality__ states that the sum of the lengths of any
    two sides of a triangle is greater than the length of the third side. This
    also means that the shortest distance between two any points is a straight
    line (because going via a third point is always longer).
  # TODO Image

triangle-median:
  title: Medians of a triangle
  text: The __medians__ of a triangle are the line segments that connect each
    vertex to the midpoint of the opposite sides. The three medians of a
    triangle intersect in a single point called the __centroid__.
  link: /course/triangles/properties#medians

triangle-midsegment:
  title: Midsegment
  text: The __midsegments__ of a triangle are the lines that connect the
    midpoints of different sides of the triangle.
  image: triangle-midsegment.svg
  link: /course/triangles/midsegments

triangle-numbers:
  title: Triangle numbers
  text: A __triangle number__ is an integer that can be represented as an
    equilateral triangle of dots. The formula for the *n*th triangle number is
    `(n*(n+1))/ 2`, and the first triangle numbers are 1, 3, 6, 10, 15, …
  image: triangle-numbers.svg
  link: /course/sequences/figurate#triangle-numbers

triangle-sss:
  title: SSS condition for triangles
  text: Two triangles are __congruent__ if their three sides have the same
    length. This is called the __SSS congruence condition__ for triangles.
  link: /course/triangles/congruence#congruence-1

trigonometry:
  title: Trigonometry
  text: __Trigonometry__ is a branch of mathematics that studies the
    relationships between the sides and angles of triangles. It is primarily
    concerned with the trigonometric functions __sine__, __cosine__, __tangent__
    and their reciprocals.
  link: /course/triangles/trigonometry

truncated-icosahedron:
  title: Truncated icosahedron
  text: The __truncated icosahedron__ is an _Archimedean solid_ consisting of
    12 regular pentagons and 20 regular hexagons.
  link: /course/polyhedra/platonic#archimedean

twin-primes:
  title: Twin primes
  text: __Twin primes__ are pairs of prime numbers like 17 and 19 or 101 and
    103, which are exactly two apart. It is unknown if there are infinitely
    many pairs of twin primes.
  link: /course/divisibility/distribution-of-primes#twin-primes

unit-circle:
  title: Unit circle
  text: A __unit circle__ is a circle with radius 1.

variable:
  title: Variable
  text: A __variable__ is a quantity that is unknown or may change value. In an
    algebraic expression, it is usually represented by a letter like _x_.

venn-diagram:
  title: Venn diagram
  text: A __Venn diagram__ visualises multiple properties or events that
    overlap.
  image: venn.svg

vertical-angles:
  title: Vertical angles
  text: __Vertical angles__ are pairs of opposite angles created by
    intersecting lines. Vertical angles are always _congruent_.

whole-numbers:
  title: Whole numbers
  text: |
    The __whole numbers__ are the counting numbers, including zero:
    0, 1, 2, 3, 4, …

zero-product:
  title: Zero product property
  text: The __zero product property__ states that, if the product of two
    quantities is zero, at least one of these quantities must also be zero.
    For example, if `a × (a - 1) = 0` then either `a = 0` or `a - 1 = 0`.
